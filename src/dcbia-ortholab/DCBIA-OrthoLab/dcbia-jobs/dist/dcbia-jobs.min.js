angular.module("dcbia-jobs",["clusterpost-list"]),angular.module("dcbia-jobs").directive("dcbiaMfsda",["$routeParams","dcbia","clusterauth","clusterpostService","dcbiaVTKService",function($routeParams,dcbia,clusterauth,clusterpostService,dcbiaVTKService){function link($scope,$attrs,$filter){var minimist=require("minimist"),stringArgv=require("string-argv");clusterauth.getUser().then(function(a){$scope.user=a}),clusterauth.getScopes().then(function(a){$scope.userScopes=a.data[0]}),$scope.projects={newProject:{collections:[],type:"project",patients:"",name:"",description:""},projects:[],projectsProperties:{defaultProject:{class:""}},selectedProjectData:{},section:0,showSection:0},$scope.defaultProject={_id:"defaultProject",name:"All projects",type:"project",items:0},$scope.morphologicalDataCollection={collections:[],selectedCollections:[]},$scope.morphologicalCheckBox=!1,$scope.clinicalDataCollection={collections:[],selectedCollections:[]},$scope.clinicalCheckBox=!1,$scope.csv={},$scope.$watch("csv.file",function(){$scope.csv.file&&$scope.csv.readFile().then(function(){$scope.$apply()})}),$scope.projects.getProjects=function(){return dcbia.getProjects().then(function(a){delete $scope.projects.selectedProject,$scope.projects.projects=a.data,_.each($scope.projects.projects,function(a){$scope.projects.projectsProperties[a._id]={class:""}})}).catch(console.error)},$scope.projects.selectProject=function(a){if($scope.projects.selectedProject&&($scope.projects.projectsProperties[$scope.projects.selectedProject._id].class=""),$scope.projects.selectedProject=a,$scope.projects.projectsProperties[a._id].class="alert alert-info",$scope.clinicalDataCollection.selectedCollections=[],$scope.morphologicalDataCollection.selectedCollections=[],_.isObject($scope.projects.selectedProject.collections))return $scope.clinicalDataCollection.selectedCollections=$scope.projects.selectedProject.collections.clinicalDataCollection,$scope.morphologicalDataCollection.selectedCollections=$scope.projects.selectedProject.collections.morphologicalDataCollection,Promise.all([Promise.all(_.map($scope.clinicalDataCollection.selectedCollections,dcbia.getClinicalData)).then(function(a){var b=[];return _.each(_.compact(_.pluck(a,"data")),function(a){b=$scope.projects.mergeCollections(b,a)}),b}),Promise.all(_.map($scope.morphologicalDataCollection.selectedCollections,dcbia.getMorphologicalData)).then(function(a){var b=[];return _.each(_.compact(_.pluck(a,"data")),function(a){b=$scope.projects.mergeCollections(b,a)}),b})]).then(function(a){$scope.projects.selectedProjectData=$scope.projects.mergeCollections(a[0],a[1]),$scope.projects.selectedProjectDataKeys=$scope.projects.getProjectDataKeys($scope.projects.selectedProjectData),$scope.projects.selectedProjectPatients=_.map($scope.projects.selectedProjectData,function(a){return a.patientId})});_.each($scope.projects.selectedProject.collections,function(a){var b=_.find($scope.clinicalDataCollection.collections,function(b){return b._id===a._id});b&&$scope.clinicalDataCollection.selectedCollections.push(b.name);var c=_.find($scope.morphologicalDataCollection.collections,function(b){return b._id===a._id});c&&$scope.morphologicalDataCollection.selectedCollections.push(c.name)}),Promise.all([$scope.clinical.getSelectedProjectData(),$scope.morphological.getSelectedProjectData()]).then(function(){$scope.projects.selectedProjectData=$scope.projects.mergeCollections($scope.clinical.data,$scope.morphological.data),$scope.projects.selectedProjectDataKeys=$scope.projects.getProjectDataKeys($scope.projects.selectedProjectData),$scope.projects.selectedProjectPatients=_.map($scope.projects.selectedProjectData,function(a){return a.patientId})})},$scope.projects.getFilteredAttachments=function(a,b){var c=a;if($scope.projects.analysis.attachmentsRegex&&""!=$scope.projects.analysis.attachmentsRegex){var d=new RegExp("^"+$scope.projects.analysis.attachmentsRegex.split("*").join(".*")+"$"),e=_.filter(_.keys(a),function(a){return d.test(a)});c=_.pick(a,e)}return b&&$scope.projects.analysis.isSelectedAttachments?_.pick(c,_.compact(_.map($scope.projects.analysis.isSelectedAttachments[b],function(a,b){return a?b:""}))):c},$scope.projects.setGroupProjectDataDisplayed=function(){_.each($scope.projects.analysis.selectedProjectDataDisplayed,function(a){a.group=$scope.projects.analysis.group})},$scope.projects.getProjectKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,_.keys(b)},$scope.projects.getProjectDataKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,b.type&&delete b.type,b.owner&&delete b.owner,b.owners&&delete b.owners,b.formId&&delete b.formId,b.date&&delete b.date,b.scope&&delete b.scope,_.keys(b)},$scope.projects.select=function(a){return dcbia.getProject(a._id).then(function(a){var b=a.data;$scope.projects.selectProject(b),$scope.projects.selectedProjectKeys=$scope.projects.getProjectKeys([b])}).catch(console.error)},$scope.projects.getProjectItems=function(a){var b=0;return _.isObject(a.collections)&&!_.isArray(a.collections)?(_.each(a.collections.clinicalDataCollection,function(a){var c=_.find($scope.clinicalDataCollection.collections,function(b){return a===b._id});c&&(b+=c.items.length)}),_.each(a.collections.morphologicalDataCollection,function(a){var c=_.find($scope.morphologicalDataCollection.collections,function(b){return a===b._id});c&&(b+=c.items.length)})):_.each(a.collections,function(a){_.each($scope.clinicalDataCollection.collections,function(c){a._id==c._id&&(b+=c.items.length)}),_.each($scope.morphologicalDataCollection.collections,function(c){a._id==c._id&&(b+=c.items.length)})}),b},$scope.projects.mergeCollections=function(a,b){return _.each(b,function(b){if(b&&b._attachments&&b._id){var c={};c[b._id]=b._attachments,b.attachments=c,delete b._attachments}b._id&&delete b._id,b._rev&&delete b._rev,b.owners&&delete b.owners,b.owner&&delete b.owner;var d=_.find(a,function(a){return a.patientId===b.patientId});d?_.extend(d,b):a.push(b)}),_.each(a,function(a){"mergedCollection"!==a.type&&(a.type="mergedCollection")}),a},$scope.morphologicalDataCollection.getMorphologicalDataCollections=function(){return dcbia.getMorphologicalDataCollections().then(function(a){$scope.morphologicalDataCollection.collections=a.data}).catch(console.error)},$scope.morphologicalDataCollection.checkAll=function(a){$scope.morphologicalDataCollection.selectedCollections=[],a&&_.each($scope.morphologicalDataCollection.collections,function(a){$scope.morphologicalDataCollection.selectedCollections.push(a.name)})},$scope.morphologicalDataCollection.isCollectionInProject=function(a){var b=!1;return _.each($scope.morphologicalDataCollection.selectedCollections,function(c){a.name===c&&(b=!0)}),b},$scope.clinicalDataCollection.getClinicalDataCollections=function(){return dcbia.getClinicalDataCollections().then(function(a){$scope.clinicalDataCollection.collections=a.data}).catch(console.error)},$scope.clinicalDataCollection.isCollectionInProject=function(a){var b=!1;return _.each($scope.clinicalDataCollection.selectedCollections,function(c){a.name===c&&(b=!0)}),b},$scope.projects.showSubset=function(analysis){var selectedProjectData=_.filter($scope.projects.selectedProjectData,function(a){return-1!==analysis.selectedPatients.indexOf(a.patientId)});selectedProjectData=_.map(selectedProjectData,function(a){return _.pick(a,function(a,b,c){return-1!==analysis.selectedVariables.indexOf(b)})}),$scope.projects.analysis={},$scope.projects.analysis.name=analysis.name,$scope.projects.analysis.selectedProjectData=selectedProjectData,$scope.projects.analysis.selectedProjectDataKeys=analysis.selectedVariables,$scope.projects.analysis.isSelectedAttachments=analysis.isSelectedAttachments;var indexgroup=$scope.projects.analysis.selectedProjectDataKeys.indexOf("group");-1!==indexgroup?($scope.projects.analysis.hasGroup=!0,$scope.projects.analysis.selectedProjectDataKeys.splice(indexgroup,1),$scope.projects.analysis.selectedProjectDataKeys.splice(0,0,"group")):$scope.projects.analysis.hasGroup=!1;var projectDataKeys=_.clone($scope.projects.analysis.selectedProjectDataKeys);-1!=projectDataKeys.indexOf("attachments")&&projectDataKeys.splice(projectDataKeys.indexOf("attachments"),1),$scope.mfsda.covariateType=_.map(projectDataKeys,function(cn){var data=_.pluck($scope.projects.analysis.selectedProjectData,cn),datatype=_.map(data,function(a){return _.isNumber(a)?Number.isInteger(a):1});return Number(!eval(datatype.join("&&")))})},$scope.projects.selectVisibleAttachments=function(a){_.each($scope.projects.analysis.selectedProjectDataDisplayed,function(b){_.each(b.attachments,function(b,c){_.each($scope.projects.getFilteredAttachments(b,c),function(b){b.selected=a})})})},$scope.clusterpost={},$scope.mfsda={editJobParameters:!0,jobParameters:$scope.jobParameters},$scope.vtk={},$scope.mfsda.submitJob=function(){var a=$scope.mfsda.getData();a.data.push({name:"covariateType.csv",data:$scope.mfsda.covariateType.join(",")}),a.inputs.push({name:"covariateType.csv"});var b={};$scope.mfsda.name&&(b.name=$scope.mfsda.name),b.executable="MFSDAv2.0.0.sh",b.parameters=[{flag:"--shapeData",name:"shapeData.txt"},{flag:"--coordData",name:a.template.name},{flag:"--covariate",name:"covariate.csv"},{flag:"--covariateType",name:"covariateType.csv"},{flag:"--outputDir",name:"./output"}],b.type="job",b.inputs=a.inputs,b.executionserver=$scope.clusterpost.selectedServer.name,b.outputs=[{name:"output",type:"tar.gz"},{name:"stdout.out",type:"file"},{name:"stderr.err",type:"file"},{name:"efit.json",type:"file",path:"./output/efit.json"},{name:"pvalues.json",type:"file",path:"./output/pvalues.json"}],b.userEmail=$scope.user.email,b.jobparameters=[];var c=minimist(stringArgv($scope.mfsda.jobParameters));return _.each(c,function(a,c){_.isArray(a)?_.each(a,function(a){b.jobparameters.push({name:a,flag:"-"+c})}):b.jobparameters.push({name:a,flag:"-"+c})}),console.log("dataaaa",b),clusterpostService.createAndSubmitJob(b,_.pluck(a.data,"name"),_.pluck(a.data,"data")).then(function(a){console.log(a),$scope.mfsda.taskSubmitted=!0})},$scope.mfsda.download=function(a){if(a){var b=a._id;a.name&&(b=a.name);var c=new JSZip,d=[];return _.each(a.inputs,function(b){d.push(clusterpostService.getAttachment(a._id,b.name,"arraybuffer").then(function(a){return{name:b.name,arraybuffer:a.data}}))}),a._attachments["efit.json"]&&d.push(clusterpostService.getAttachment(a._id,"efit.json","arraybuffer").then(function(a){return{name:"efit.json",arraybuffer:a.data}})),a._attachments["pvalues.json"]&&d.push(clusterpostService.getAttachment(a._id,"pvalues.json","arraybuffer").then(function(a){return{name:"pvalues.json",arraybuffer:a.data}})),Promise.all(d).then(function(a){return _.each(a,function(a){c.file(b+"/"+a.name,a.arraybuffer)}),c.generateAsync({type:"blob"}).then(function(a){saveAs(a,b+".zip")})})}},$scope.mfsda.getData=function(){var a={};$scope.mfsda.showWarningTemplate=!1;var b=_.clone($scope.projects.analysis.selectedProjectDataKeys),c=_.clone($scope.projects.analysis.selectedProjectData),d={},e=_.map(c,function(a){if(a.isTemplate)return _.map(a.attachments,function(a,b){return _.map(a,function(a,c){if(a.selected){var e={name:"",local:{uri:""}};return e.local.uri=b+"/"+c,d[c]?(e.name=d[c]+"_"+c,d[c]+=1):(d[c]=1,e.name=c),e}return""})})});c=_.compact(_.map(c,function(a){return a.isTemplate?null:(_.each(b,function(b){a[b]?_.isObject(a[b])?console.log("val",typeof a[b]):(a[b]=parseFloat(a[b]),console.log("val",a[b])):(a[b]=0,console.log("dans undefined",typeof a[b]))}),a)}));var f=_.compact(_.flatten(e));if(1!=f.length)return void($scope.mfsda.showWarningTemplate=!0);var g=_.indexOf(b,"patientId");-1!=_.indexOf(b,"patientId")&&b.splice(g,1);var g=_.indexOf(b,"attachments");-1!=_.indexOf(b,"attachments")&&b.splice(g,1);var g=_.indexOf(b,"template");-1!=_.indexOf(b,"template")&&b.splice(g,1);try{var h=json2csv({data:c,fields:b}).split("\n");h.splice(0,1),covariatecsv=h.join("\n")}catch(a){console.error(a)}var i=(_.map(b,function(){return"1"}).join(","),_.compact(_.flatten(_.map(c,function(a){return a.isTemplate?null:_.compact(_.flatten(_.map(a.attachments,function(a,b){return _.map(a,function(a,c){if(a.selected){var e={name:"",local:{uri:""}};return e.local.uri=b+"/"+c,d[c]?(e.name=d[c]+"_"+c,d[c]+=1):(d[c]=1,e.name=c),e}return""})})))}))));return a.data=[],a.data.push({name:"shapeData.txt",data:_.pluck(i,"name").join("\n")}),a.data.push({name:"covariate.csv",data:covariatecsv}),1==f.length&&i.push(f[0]),i.push({name:"shapeData.txt"}),i.push({name:"covariate.csv"}),a.inputs=i,a.template=f[0],a},$scope.mfsda.hueSlider={min:0,max:1,options:{step:.01,precision:2,ceil:1,floor:0}},$scope.mfsda.covariateSlider={value:0,options:{step:1,minLimit:0,maxLimit:8,ceil:8}},$scope.mfsda.componentSlider={value:0,options:{step:1,minLimit:0,maxLimit:2,ceil:2}},$scope.mfsda.pvalueSlider={value:0,options:{step:1,minLimit:0,maxLimit:7,ceil:7}},$scope.mfsda.jobCallback=function(a){$scope.mfsda.job=a,$scope.activeTab=2;var b=_.find(a.parameters,function(a){return"--coordData"==a.flag||"-coordData"==a.flag});if(!b)throw"template not found! mfsda.jobCallback";return b=b.name,Promise.all([clusterpostService.getAttachment(a._id,"efit.json","json"),clusterpostService.getAttachment(a._id,"pvalues.json","json"),clusterpostService.getAttachment(a._id,b,"text")]).then(function(b){$scope.vtk.actor&&$scope.$broadcast("removeActor",$scope.vtk.actor);var c=_.compact(_.pluck(b,"data"));if($scope.vtk.vtkascii=c[2],$scope.vtk.vtkPolyData=dcbiaVTKService.parsePolyData(c[2]),!$scope.vtk.vtkPolyData)return Promise.reject("Poly data is not loaded");if(_.extend($scope.vtk,dcbiaVTKService.newActor($scope.vtk.vtkPolyData)),$scope.$broadcast("addActor",$scope.vtk.actor,!0),c.length>0){if(a.version&&($scope.mfsda.version=a.version.split(".")),$scope.mfsda.efit=c[0],$scope.mfsda.Lpvals_fdr=c[1].Lpvals_fdr,$scope.mfsda.Lpvals_fdr.length>0&&($scope.mfsda.pvalueSlider.maxLimit=$scope.mfsda.Lpvals_fdr[0].length-1,$scope.mfsda.pvalueSlider.options.ceil=$scope.mfsda.Lpvals_fdr[0].length-1),$scope.mfsda.version&&$scope.mfsda.version[0]>="2")$scope.mfsda.covariateSlider.options.ceil=$scope.mfsda.efit.efitBetas.length-1,$scope.mfsda.covariateSlider.options.maxLimit=$scope.mfsda.efit.efitBetas.length-1,$scope.mfsda.efit.efitBetas.length>0&&$scope.mfsda.efit.efitBetas[0].length>0?($scope.mfsda.componentSlider.options.ceil=$scope.mfsda.efit.efitBetas[0][0].length-1,$scope.mfsda.componentSlider.options.maxLimit=$scope.mfsda.efit.efitBetas[0][0].length-1):($scope.mfsda.componentSlider.options.ceil=2,$scope.mfsda.componentSlider.options.maxLimit=2);else{var d=$scope.mfsda.efit.efitBetas._ArraySize_;$scope.mfsda.covariateSlider.options.ceil=d[0]-1,$scope.mfsda.covariateSlider.options.maxLimit=d[0]-1,$scope.mfsda.componentSlider.options.ceil=d[2]-1,$scope.mfsda.componentSlider.options.maxLimit=d[2]-1}var e=$scope.mfsda.getEfitBetas();dcbiaVTKService.addPointDataArray($scope.vtk.vtkPolyData,e),$scope.vtk.updateActor(),$scope.$broadcast("resetCamera")}$scope.$apply()}).catch(console.error)},$scope.mfsda.getEfitBetas=function(){var a=[];if($scope.mfsda.efit&&$scope.mfsda.efit.efitBetas)if($scope.mfsda.version&&$scope.mfsda.version[0]>="2"){if($scope.mfsda.covariateSlider.value<$scope.mfsda.efit.efitBetas.length)for(var b=0;b<$scope.mfsda.efit.efitBetas[$scope.mfsda.covariateSlider.value].length;b++)$scope.mfsda.componentSlider.value<$scope.mfsda.efit.efitBetas[$scope.mfsda.covariateSlider.value][b].length?a.push($scope.mfsda.efit.efitBetas[$scope.mfsda.covariateSlider.value][b][$scope.mfsda.componentSlider.value]):console.error("WARNING! different size in efitBetas resul, index=",$scope.mfsda.covariateSlider.value,b,$scope.mfsda.componentSlider.value)}else for(var c=$scope.mfsda.efit.efitBetas._ArrayData_,d=$scope.mfsda.efit.efitBetas._ArraySize_,e=$scope.mfsda.componentSlider.value*d[1]*d[0]+$scope.mfsda.covariateSlider.value,f=e+d[1]*d[0],b=e;b<f&&b<c.length;b+=d[0])a.push(c[b]);return a},$scope.mfsda.getPvalues=function(){var a=[];if($scope.mfsda.Lpvals_fdr)for(var b=0;b<$scope.mfsda.Lpvals_fdr.length;b++)a.push($scope.mfsda.Lpvals_fdr[b][$scope.mfsda.pvalueSlider.value]);return a},$scope.mfsda.selectOutput={options:[{name:"betas"},{name:"pValues"}]},$scope.vtk.updateActor=function(a){if(a=a||$scope.mfsda.hueSlider,$scope.vtk.mapper){$scope.vtk.mapper.getLookupTable().setHueRange(a.min,a.max),$scope.vtk.mapper.update(),$scope.$broadcast("renderWindow")}},$scope.vtk.download=function(){if($scope.mfsda.job){var a={};return a.executable="generateShapes.sh",a.version="1.0.0",a.parameters=[{flag:"--shape",name:"shape.vtk"},{flag:"--pvalues",name:"pvalues.json"},{flag:"--efit",name:"efit.json"},{flag:"--output",name:"output.vtk"}],a.type="job",a.inputs=[{name:"pvalues.json",local:{uri:$scope.mfsda.job._id+"/pvalues.json"}},{name:"efit.json",local:{uri:$scope.mfsda.job._id+"/efit.json"}},{name:"shape.vtk"}],a.executionserver="localhost",a.outputs=[{name:"output",type:"tar.gz"},{name:"stdout.out",type:"file"},{name:"stderr.err",type:"file"}],a.userEmail=$scope.user.email,a.jobparameters=[],clusterpostService.createAndSubmitJob(a,["shape.vtk"],[$scope.vtk.vtkascii]).then(function(a){console.log(a),$scope.mfsda.taskSubmitted=!0})}},$scope.mfsda.selectOutput.update=function(){var a=[];$scope.mfsda.selectOutput.option&&("betas"===$scope.mfsda.selectOutput.option.name?a=$scope.mfsda.getEfitBetas():"pValues"===$scope.mfsda.selectOutput.option.name&&(a=$scope.mfsda.getPvalues()),dcbiaVTKService.addPointDataArray($scope.vtk.vtkPolyData,a),$scope.vtk.updateActor())},$scope.$watch("mfsda.covariateSlider.value",function(a){if(void 0!==a&&$scope.vtk.vtkPolyData){var b=$scope.mfsda.getEfitBetas();dcbiaVTKService.addPointDataArray($scope.vtk.vtkPolyData,b),$scope.vtk.updateActor()}}),$scope.$watch("mfsda.componentSlider.value",function(a){if(void 0!==a&&$scope.vtk.vtkPolyData){var b=$scope.mfsda.getEfitBetas();dcbiaVTKService.addPointDataArray($scope.vtk.vtkPolyData,b),$scope.vtk.updateActor()}}),$scope.$watch("mfsda.pvalueSlider.value",function(a){if(void 0!==a&&$scope.vtk.vtkPolyData){var b=$scope.mfsda.getPvalues();dcbiaVTKService.addPointDataArray($scope.vtk.vtkPolyData,b),$scope.vtk.updateActor()}}),$scope.$watch("mfsda.fileTemplate",function(a){if(a){var b=new FileReader;b.onload=function(a){var b=a.target.result;$scope.$broadcast("removeActor",$scope.vtk.actor),$scope.vtk.vtkascii=b,$scope.vtk.vtkPolyData=dcbiaVTKService.parsePolyData(b),_.extend($scope.vtk,dcbiaVTKService.newActor($scope.vtk.vtkPolyData)),$scope.$broadcast("addActor",$scope.vtk.actor,!0),$scope.mfsda.selectOutput.update()},b.onerror=function(a){reject(a)},b.readAsText(a)}}),$scope.$watch("mfsda.hueSlider",function(a){a&&$scope.vtk.updateActor(a)},!0),$scope.clinical={data:[]},$scope.morphological={data:[]},$scope.clinical.getSelectedProjectData=function(){var a=_.map($scope.projects.selectedProject.collections,function(a){return a._id});return Promise.all(_.map(a,dcbia.getClinicalData)).then(function(a){return _.each(a,function(a){$scope.clinical.data=$scope.clinical.data.length?$scope.projects.mergeCollections($scope.clinical.data,a.data):a.data}),$scope.clinical.data})},$scope.morphological.getSelectedProjectData=function(){var a=_.map($scope.projects.selectedProject.collections,function(a){return a._id});return Promise.all(_.map(a,dcbia.getMorphologicalData)).then(function(a){return _.each(a,function(a){$scope.morphological.data=$scope.morphological.data.length?$scope.projects.mergeCollections($scope.morphological.data,a.data):a.data}),$scope.morphological.data})},$scope.clusterpost={},clusterpostService.getExecutionServers().then(function(a){$scope.clusterpost.servers=a.data,$scope.clusterpost.selectedServer=a.data[0]}),$scope.projects.getProjects().then(function(){return $scope.morphologicalDataCollection.getMorphologicalDataCollections()}).then(function(){return $scope.clinicalDataCollection.getClinicalDataCollections()})}return{restrict:"E",link:link,scope:{jobParameters:"="},templateUrl:"./src/dcbia-mfsda.template.html"}}]),angular.module("dcbia-jobs").directive("dcbiaPreprocessing",["$routeParams","dcbia","clusterauth","clusterpostService","dcbiaVTKService",function($routeParams,dcbia,clusterauth,clusterpostService,dcbiaVTKService){function link($scope,$attrs,$filter){var minimist=require("minimist"),stringArgv=require("string-argv");clusterauth.getUser().then(function(a){$scope.user=a}),clusterauth.getScopes().then(function(a){$scope.userScopes=a.data[0]}),$scope.projects={newProject:{collections:[],type:"project",patients:"",name:"",description:""},projects:[],projectsProperties:{defaultProject:{class:""}},selectedProjectData:{},section:0,showSection:0},$scope.defaultProject={_id:"defaultProject",name:"All projects",type:"project",items:0},$scope.morphologicalDataCollection={collections:[],selectedCollections:[]},$scope.morphologicalCheckBox=!1,$scope.clinicalDataCollection={collections:[],selectedCollections:[]},$scope.clinicalCheckBox=!1,$scope.csv={},$scope.$watch("csv.file",function(){$scope.csv.file&&$scope.csv.readFile().then(function(){$scope.$apply()})}),$scope.projects.getProjects=function(){return dcbia.getProjects().then(function(a){delete $scope.projects.selectedProject,$scope.projects.projects=a.data,_.each($scope.projects.projects,function(a){$scope.projects.projectsProperties[a._id]={class:""}})}).catch(console.error)},$scope.projects.selectProject=function(a){if($scope.projects.selectedProject&&($scope.projects.projectsProperties[$scope.projects.selectedProject._id].class=""),$scope.projects.selectedProject=a,$scope.projects.projectsProperties[a._id].class="alert alert-info",$scope.clinicalDataCollection.selectedCollections=[],$scope.morphologicalDataCollection.selectedCollections=[],_.isObject($scope.projects.selectedProject.collections))return $scope.clinicalDataCollection.selectedCollections=$scope.projects.selectedProject.collections.clinicalDataCollection,$scope.morphologicalDataCollection.selectedCollections=$scope.projects.selectedProject.collections.morphologicalDataCollection,Promise.all([Promise.all(_.map($scope.clinicalDataCollection.selectedCollections,dcbia.getClinicalData)).then(function(a){var b=[];return _.each(_.compact(_.pluck(a,"data")),function(a){b=$scope.projects.mergeCollections(b,a)}),b}),Promise.all(_.map($scope.morphologicalDataCollection.selectedCollections,dcbia.getMorphologicalData)).then(function(a){var b=[];return _.each(_.compact(_.pluck(a,"data")),function(a){b=$scope.projects.mergeCollections(b,a)}),b})]).then(function(a){$scope.projects.selectedProjectData=$scope.projects.mergeCollections(a[0],a[1]),$scope.projects.selectedProjectDataKeys=$scope.projects.getProjectDataKeys($scope.projects.selectedProjectData),$scope.projects.selectedProjectPatients=_.map($scope.projects.selectedProjectData,function(a){return a.patientId})});_.each($scope.projects.selectedProject.collections,function(a){var b=_.find($scope.clinicalDataCollection.collections,function(b){return b._id===a._id});b&&$scope.clinicalDataCollection.selectedCollections.push(b.name);var c=_.find($scope.morphologicalDataCollection.collections,function(b){return b._id===a._id});c&&$scope.morphologicalDataCollection.selectedCollections.push(c.name)}),Promise.all([$scope.clinical.getSelectedProjectData(),$scope.morphological.getSelectedProjectData()]).then(function(){$scope.projects.selectedProjectData=$scope.projects.mergeCollections($scope.clinical.data,$scope.morphological.data),$scope.projects.selectedProjectDataKeys=$scope.projects.getProjectDataKeys($scope.projects.selectedProjectData),$scope.projects.selectedProjectPatients=_.map($scope.projects.selectedProjectData,function(a){return a.patientId})})},$scope.projects.getFilteredAttachments=function(a){if($scope.projects.analysis.attachmentsRegex&&""!=$scope.projects.analysis.attachmentsRegex){var b=new RegExp("^"+$scope.projects.analysis.attachmentsRegex.split("*").join(".*")+"$"),c=_.filter(_.keys(a),function(a){return b.test(a)});return _.pick(a,c)}return a},$scope.projects.setGroupProjectDataDisplayed=function(){_.each($scope.projects.analysis.selectedProjectDataDisplayed,function(a){a.group=$scope.projects.analysis.group})},$scope.projects.getProjectKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,_.keys(b)},$scope.projects.getProjectDataKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,b.type&&delete b.type,b.owner&&delete b.owner,b.owners&&delete b.owners,b.formId&&delete b.formId,b.date&&delete b.date,b.scope&&delete b.scope,_.keys(b)},$scope.projects.select=function(a){return dcbia.getProject(a._id).then(function(a){var b=a.data;$scope.projects.selectProject(b),$scope.projects.selectedProjectKeys=$scope.projects.getProjectKeys([b])}).catch(console.error)},$scope.projects.getProjectItems=function(a){var b=0;return _.isObject(a.collections)&&!_.isArray(a.collections)?(_.each(a.collections.clinicalDataCollection,function(a){var c=_.find($scope.clinicalDataCollection.collections,function(b){return a===b._id});c&&(b+=c.items.length)}),_.each(a.collections.morphologicalDataCollection,function(a){var c=_.find($scope.morphologicalDataCollection.collections,function(b){return a===b._id});c&&(b+=c.items.length)})):_.each(a.collections,function(a){_.each($scope.clinicalDataCollection.collections,function(c){a._id==c._id&&(b+=c.items.length)}),_.each($scope.morphologicalDataCollection.collections,function(c){a._id==c._id&&(b+=c.items.length)})}),b},$scope.projects.mergeCollections=function(a,b){return _.each(b,function(b){if(b&&b._attachments&&b._id){var c={};c[b._id]=b._attachments,b.attachments=c,delete b._attachments}b._id&&delete b._id,b._rev&&delete b._rev,b.owners&&delete b.owners,b.owner&&delete b.owner;var d=_.find(a,function(a){return a.patientId===b.patientId});d?_.extend(d,b):a.push(b)}),_.each(a,function(a){"mergedCollection"!==a.type&&(a.type="mergedCollection")}),a},$scope.morphologicalDataCollection.getMorphologicalDataCollections=function(){return dcbia.getMorphologicalDataCollections().then(function(a){$scope.morphologicalDataCollection.collections=a.data}).catch(console.error)},$scope.morphologicalDataCollection.checkAll=function(a){$scope.morphologicalDataCollection.selectedCollections=[],a&&_.each($scope.morphologicalDataCollection.collections,function(a){$scope.morphologicalDataCollection.selectedCollections.push(a.name)})},$scope.morphologicalDataCollection.isCollectionInProject=function(a){var b=!1;return _.each($scope.morphologicalDataCollection.selectedCollections,function(c){a.name===c&&(b=!0)}),b},$scope.clinicalDataCollection.getClinicalDataCollections=function(){return dcbia.getClinicalDataCollections().then(function(a){$scope.clinicalDataCollection.collections=a.data}).catch(console.error)},$scope.clinicalDataCollection.isCollectionInProject=function(a){var b=!1;return _.each($scope.clinicalDataCollection.selectedCollections,function(c){a.name===c&&(b=!0)}),b},$scope.projects.showSubset=function(a){$scope.preprocessing.Neutral=!0;var b=$scope.projects.selectedProject.analyses[a],c=_.filter($scope.projects.selectedProjectData,function(a){return-1!==b.selectedPatients.indexOf(a.patientId)});c=_.map(c,function(a){return _.pick(a,function(a,c,d){return-1!==b.selectedVariables.indexOf(c)})}),$scope.projects.analysis={},$scope.projects.analysis.name=b.name,$scope.projects.analysis.selectedProjectData=c,$scope.projects.analysis.selectedProjectDataKeys=b.selectedVariables;var d=$scope.projects.analysis.selectedProjectDataKeys.indexOf("group");-1!==d?($scope.projects.analysis.hasGroup=!0,$scope.projects.analysis.selectedProjectDataKeys.splice(d,1),$scope.projects.analysis.selectedProjectDataKeys.splice(0,0,"group")):$scope.projects.analysis.hasGroup=!1},$scope.projects.selectVisibleAttachments=function(a){_.each($scope.projects.analysis.selectedProjectDataDisplayed,function(b){_.each(b.attachments,function(b){_.each($scope.projects.getFilteredAttachments(b),function(b){b.selected=a})})})},$scope.clusterpost={},$scope.preprocessing={editJobParameters:!0,jobParameters:$scope.jobParameters},$scope.preprocessing.getFilteredDataSet=function(){$scope.preprocessing.OA=!1,$scope.preprocessing.Control=!1,$scope.preprocessing.Neutral=!0;for(var a=_.clone($scope.preprocessing.type_Control),b=_.clone($scope.preprocessing.type_OA),c=_.clone($scope.projects.analysis.selectedProjectDataKeys),d=_.clone($scope.projects.analysis.selectedProjectData),e=0,f=0,g=[];e<c.length;)"group"==c[e]?(e+=1,e):"patientId"==c[e]?(index_patientId=e,e+=1):(g[f]=c[e],f+=1,e+=1);$scope.projects.analysis.selectedProjectDataKeys=g;var h=[],i=[],j=[],k=0,l=0;if(a&&!b)for($scope.preprocessing.Control=!0,$scope.preprocessing.Neutral=!1;k<d.length;)0==d[k].group?(i[l]=d[k],delete i.group,delete i.patientId,l+=1,k+=1):k+=1;else if(b&&!a)for($scope.preprocessing.OA=!0,$scope.preprocessing.Neutral=!1;k<d.length;)1==d[k].group?(h[l]=d[k],delete h.group,delete h.patientId,l+=1,k+=1):k+=1;else if(b&&a)for($scope.preprocessing.Neutral=!0;k<d.length;)j[k]=d[k],delete j.group,delete j.patientId,k+=1;$scope.projects.analysis.selectedProjectDataNeutral=j,$scope.projects.analysis.selectedProjectDataOA=h,$scope.projects.analysis.selectedProjectDataControl=i},$scope.preprocessing.submitJob=function(){var a=$scope.preprocessing.getData(),b={};$scope.preprocessing.name&&(b.name=$scope.preprocessing.name),b.executable="preprocessing.sh",b.parameters=[{flag:"--csv",name:"covariates_Values.csv"},{flag:"--num_components",name:a.flags.num_components},{flag:"--output",name:"./output"}],b.type="job",b.inputs=a.inputs,b.executionserver=$scope.clusterpost.selectedServer.name,b.outputs=[{name:"output",type:"tar.gz"},{name:"stdout.out",type:"file"},{name:"stderr.err",type:"file"},{name:"pearsoncorr.csv",type:"file",path:"./output/pearsoncorr.csv"},{name:"pvaluesFirst.json",type:"file",path:"./output/pvaluesFirst.json"},{name:"pearsonFirst.csv",type:"file",path:"./output/pearsonFirst.csv"},{name:"pvaluesFirst.csv",type:"file",path:"./output/pvaluesFirst.csv"},{name:"pearsoncorr.json",type:"file",path:"./output/pearsoncorr.json"},{name:"Plot_covariates_for_each_patient.pdf",type:"file",path:"./output/Plot_covariates_for_each_patient.pdf"}],b.userEmail=$scope.user.email,b.jobparameters=[];var c=minimist(stringArgv($scope.preprocessing.jobParameters));return _.each(c,function(a,c){_.isArray(a)?_.each(a,function(a){b.jobparameters.push({name:a,flag:"-"+c})}):b.jobparameters.push({name:a,flag:"-"+c})}),clusterpostService.createAndSubmitJob(b,_.pluck(a.data,"name"),_.pluck(a.data,"data")).then(function(a){console.log(a.config)})},$scope.preprocessing.download=function(a){if(a){var b=a._id;a.name&&(b=a.name);var c=new JSZip,d=[];return _.each(a.inputs,function(b){d.push(clusterpostService.getAttachment(a._id,b.name,"arraybuffer").then(function(a){return{name:b.name,arraybuffer:a.data}}))}),a._attachments["pearsoncorr.json"]&&d.push(clusterpostService.getAttachment(a._id,"pearsoncorr.json","arraybuffer").then(function(a){return{name:"pearsoncorr.json",arraybuffer:a.data}})),a._attachments["pvaluesFirst.json"]&&d.push(clusterpostService.getAttachment(a._id,"pvaluesFirst.json","arraybuffer").then(function(a){return{name:"pvaluesFirst.json",arraybuffer:a.data}})),a._attachments["Plot_covariates_for_each_patient.pdf"]&&d.push(clusterpostService.getAttachment(a._id,"Plot_covariates_for_each_patient.pdf","arraybuffer").then(function(a){return{name:"Plot_covariates_for_each_patient.pdf",arraybuffer:a.data}})),a._attachments["pvaluesFirst.csv"]&&d.push(clusterpostService.getAttachment(a._id,"pvaluesFirst.csv","arraybuffer").then(function(a){return{name:"pvaluesFirst.csv",arraybuffer:a.data}})),a._attachments["pearsonFirst.csv"]&&d.push(clusterpostService.getAttachment(a._id,"pearsonFirst.csv","arraybuffer").then(function(a){return{name:"pearsonFirst.csv",
arraybuffer:a.data}})),a._attachments["pearsoncorr.csv"]&&d.push(clusterpostService.getAttachment(a._id,"pearsoncorr.csv","arraybuffer").then(function(a){return{name:"pearsoncorr.csv",arraybuffer:a.data}})),Promise.all(d).then(function(a){return _.each(a,function(a){c.file(b+"/"+a.name,a.arraybuffer)}),c.generateAsync({type:"blob"}).then(function(a){saveAs(a,b+".zip")})})}},$scope.preprocessing.getData=function(){var preprocessing={};$scope.preprocessing.showWarningNumComponent=!1,$scope.preprocessing.showWarningPatienttype=!1,$scope.preprocessing.numCovariates=0,$scope.preprocessing.typeofPatient=0;var OA_Patient=_.clone($scope.preprocessing.type_OA),Control_Patient=_.clone($scope.preprocessing.type_Control),covariateName=_.clone($scope.projects.analysis.selectedProjectDataKeys),covariate=_.clone($scope.projects.analysis.selectedProjectData),num_components=_.clone($scope.preprocessing.num_components);covariate=OA_Patient&&!Control_Patient?$scope.projects.analysis.selectedProjectDataOA:Control_Patient&&!OA_Patient?$scope.projects.analysis.selectedProjectDataControl:$scope.projects.analysis.selectedProjectDataNeutral;var covariateNames=_.compact(_.flatten(covariateName));if($scope.preprocessing.length=covariateNames.length,0==num_components||num_components>covariateNames.length)return void($scope.preprocessing.showWarningNumComponent=!0);if(num_components=parseInt(num_components),$scope.preprocessing.typeofPatient=OA_Patient?1:0,!OA_Patient&&!Control_Patient)return void($scope.preprocessing.showWarningPatienttype=!0);var mapnames={};covariate=_.compact(_.map(covariate,function(a){return _.each(covariateName,function(b){void 0===a[b]&&(a[b]=0)}),a}));var covariateNameIndex=_.indexOf(covariateName,"patientId");-1!=covariateNameIndex&&covariateName.splice(covariateNameIndex,1);try{var result=json2csv({data:covariate,fields:covariateName,quotes:""}).split("\n");covariatecsv=result.join("\n")}catch(a){console.error(a)}var covariateType=_.map(covariateName,function(cn){var data=_.pluck(covariate,cn),datatype=_.map(data,function(a){return _.isNumber(a)?Number.isInteger(a):1});return Number(!eval(datatype.join("&&")))}).join(","),filelistobj=_.compact(_.flatten(_.map(covariate,function(a){return _.compact(_.flatten(_.map(a.attachments,function(a,b){return _.map(a,function(a,c){if(a.selected){var d={name:"",local:{uri:""}};return d.local.uri=b+"/"+c,mapnames[c]?(d.name=mapnames[c]+"_"+c,mapnames[c]+=1):(mapnames[c]=1,d.name=c),d}return""})})))})));return OA_Control=parseInt($scope.preprocessing.typeofPatient),preprocessing.data=[],preprocessing.data.push({name:"covariates_Values.csv",data:covariatecsv}),preprocessing.flags={},preprocessing.flags.covariates=covariateName.join(" "),preprocessing.flags.num_components=String(num_components),preprocessing.flags.OA_Control=String(OA_Control),filelistobj.push({name:"covariates_Values.csv"}),preprocessing.inputs=filelistobj,preprocessing},$scope.preprocessing.hueSlider={min:0,max:1,options:{step:.01,precision:2,ceil:1,floor:0}},$scope.preprocessing.covariateSlider={value:0,options:{step:1,minLimit:0,maxLimit:8,ceil:8}},$scope.preprocessing.componentSlider={value:0,options:{step:1,minLimit:0,maxLimit:2,ceil:2}},$scope.preprocessing.pvalueSlider={value:0,options:{step:1,minLimit:0,maxLimit:7,ceil:7}},$scope.heat_map={pearsoncorr:{},pvalues:{},attributes:{colors:["#ff0000","#ffff00","#008000","#0000ff"],scale:[0,.01,.05,.05001,1]}},$scope.preprocessing.jobCallback=function(a){$scope.preprocessing.showPlots=!0,$scope.activeTab=2,$scope.preprocessing.getDataDisplay(a).then(function(a){_.extend($scope.heat_map.pvalues,a[0]),_.extend($scope.heat_map.pearsoncorr,a[1]),$scope.heat_map.pvalues.attributes=$scope.heat_map.attributes,$scope.heat_map.pearsoncorr.attributes=$scope.heat_map.attributes,$scope.$apply()})},$scope.preprocessing.getDataDisplay=function(a,b){return Promise.all([clusterpostService.getAttachment(a._id,"pvaluesFirst.json","json"),clusterpostService.getAttachment(a._id,"pearsoncorr.json","json")]).then(function(a){namesx=a[0].data.covariates;var b=Array(a[1].data.pearsoncorr.length),c=Array.apply(null,b),d=c.map(function(a,b){return"PC "+(b+1)});for(pvalue=[],i=0;i<a[1].data.pearsoncorr.length;i++)for(pvalue[i]=[],j=0;j<a[1].data.covariates.length;j++)pvalue[i][j]=a[1].data.pearsoncorr[i][j][1];heat_map_pearsoncorr=pvalue;var e=a[0].data.covariates;for(value=[],temp=[],i=0;i<a[0].data.pearsoncorr.length;i++)for(temp[i]=[],j=0;j<a[0].data.covariates.length;j++)temp[i][j]=a[0].data.pearsoncorr[i][j];heat_map=temp;var f={namesx:namesx,namesy:d,heat_map:heat_map_pearsoncorr};return{0:{namesx:namesx,namesy:e,heat_map:heat_map},1:f}})},$scope.$watch("preprocessing.fileTemplate",function(a){if(a){var b=new FileReader;b.onload=function(a){var b=a.target.result;$scope.preprocessing.vtkPolyData=dcbiaVTKService.parseVTK(b),$scope.preprocessing.selectOutput.update()},b.onerror=function(a){reject(a)},b.readAsText(a)}}),$scope.csv.export=function(a){var b;b=$scope.projects.selectedProject&&a._id===$scope.projects.selectedProject._id?Promise.resolve(!0):$scope.projects.select(a),b.then(function(){var a=($scope.projects.getProjectKeys([$scope.projects.selectedProject]),"name:,"+$scope.projects.selectedProject.name+"\n");a+="description:,"+$scope.projects.selectedProject.description+"\n",a+="patients:,"+$scope.projects.selectedProject.patients+"\n",a+="\n",a+=["Name","Number of items","Type"].toString(),a+="\n",_.each($scope.projects.selectedProject.collections,function(b,c){_.each($scope.clinicalDataCollection.collections,function(c){b._id===c._id&&(a+=c.name+","+c.items.length+","+c.type+"\n")}),_.each($scope.morphologicalDataCollection.collections,function(c){b._id===c._id&&(a+=c.name+","+c.items.length+","+c.type+"\n")})});var b=$scope.projects.selectedProject.name;return-1===$scope.projects.selectedProject.name.indexOf("csv")&&(b+=".csv"),$scope.csv.download(b,a)}).catch(console.error)},$scope.csv.download=function(a,b){var c=document.createElement("a"),d=new Blob([b],{type:"text/plain"});c.setAttribute("href",window.URL.createObjectURL(d)),c.setAttribute("download",a),c.dataset.downloadurl=["text/plain",c.download,c.href].join(":"),c.click()},$scope.clinical={data:[]},$scope.morphological={data:[]},$scope.clinical.getSelectedProjectData=function(){var a=_.map($scope.projects.selectedProject.collections,function(a){return a._id});return Promise.all(_.map(a,dcbia.getClinicalData)).then(function(a){return _.each(a,function(a){$scope.clinical.data=$scope.clinical.data.length?$scope.projects.mergeCollections($scope.clinical.data,a.data):a.data}),$scope.clinical.data})},$scope.morphological.getSelectedProjectData=function(){var a=_.map($scope.projects.selectedProject.collections,function(a){return a._id});return Promise.all(_.map(a,dcbia.getMorphologicalData)).then(function(a){return _.each(a,function(a){$scope.morphological.data=$scope.morphological.data.length?$scope.projects.mergeCollections($scope.morphological.data,a.data):a.data}),$scope.morphological.data})},$scope.clusterpost={},clusterpostService.getExecutionServers().then(function(a){$scope.clusterpost.servers=a.data,$scope.clusterpost.selectedServer=a.data[0]}),$scope.projects.getProjects().then(function(){return $scope.morphologicalDataCollection.getMorphologicalDataCollections()}).then(function(){return $scope.clinicalDataCollection.getClinicalDataCollections()})}return{restrict:"E",link:link,scope:{jobParameters:"="},templateUrl:"./src/dcbia-preprocessing.template.html"}}]),angular.module("dcbia-jobs").run(["$templateCache",function(a){"use strict";a.put("./src/dcbia-mfsda.template.html",'<uib-tabset active="activeTab">\n\t<uib-tab heading="Create task" index="0">\n\t\t<div ng-if="projects.section == 0">\n\t\t\t<div class="panel panel-default">\n\t\t  \t\t<div class="panel-body">  \t\t\t\n\t\t\t\t\t<div class="col-sm-6 col-md-4" ng-repeat="project in projects.projects">\n\t\t\t\t\t\t<div ng-class="projects.projectsProperties[project._id].class">\n\t\t\t\t\t\t    <div class="thumbnail">\n\t\t\t\t\t\t      <div class="caption">\n\t\t\t\t\t\t        <h3>{{project.name}}</h3>\n\t\t\t\t\t\t        <p>\n\t\t\t\t\t\t        \t<b>Number of items: </b> {{projects.getProjectItems(project)}}\n\t\t\t\t\t\t        </p>\n\t\t\t\t\t        \t<div class="btn-group">\n\t\t\t\t\t\t\t\t <button type="button" class="btn btn-default" ng-click="projects.showSection = 1;projects.select(project)">\n\t\t\t\t\t\t\t\t \t<span class="glyphicon glyphicon-eye-open"></span>\n\t\t\t\t\t\t\t\t </button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="panel panel-default" style="overflow:scroll" ng-if="projects.showSection == 1">\n\t\t\t\t<div class="panel-heading">\n\t\t\t    \tSaved subsets\n\t\t\t  \t</div>\n\t\t\t  \t<div class="panel-body">\n\t\t\t  \t\t<table st-table="projects.displayedAnalyses" st-safe-src="projects.selectedProject.analyses" class="table table-striped">\n\t\t\t            <thead>\n\t\t\t                <tr>\n\t\t\t                    <th colspan="2">\n\t\t\t                        <input st-search="" placeholder="search by name" class="input-sm form-control" type="search"/>\n\t\t\t                    </th>\t                    \n\t\t\t                </tr>\n\t\t\t            </thead>\n\t\t\t            <tbody>\n\t\t\t                <tr ng-repeat="(index, analysis) in projects.displayedAnalyses">\n\t\t\t                    <td>\n\t\t\t                        {{analysis.name}}\n\t\t\t                    </td>\n\t\t\t                    <td>\n\t\t\t                        <button type="button" class="btn btn-info" ng-click="projects.showSubset(analysis)">\n\t\t\t                \t\t\t<span class="glyphicon glyphicon-eye-open"></span>\n\t\t\t             \t\t\t</button>\n\t\t\t                    </td>                        \n\t\t\t                </tr>\n\t\t\t            </tbody>\n\t\t\t        </table>\n\t\t\t  \t</div>\n\t\t\t</div>\n\t\t\t<div class="panel panel-default" style="overflow:scroll" ng-if="projects.showSection == 1">\n\t\t\t\t<div class="panel-heading">\n\t\t\t    \tSubset\n\t\t\t  \t</div>\t\t  \t\n\t\t\t\t<div class="panel-body">\n\t\t\t\t\t<div class="input-group">\n\t\t\t  \t\t\t<span class="input-group-addon">Name</span>\n\t\t\t  \t\t\t<input type="text" class="form-control" placeholder="Subset name" aria-describedby="basic-addon3" ng-model="projects.analysis.name">\n\t\t  \t\t\t</div>  \t\t\t\t    \n\t\t\t\t\t<table st-table="projects.analysis.selectedProjectDataDisplayed" st-safe-src="projects.analysis.selectedProjectData" class="table table-striped">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th colspan="1">Covariate type</th>\n\t\t\t\t\t\t\t\t<td colspan="2" ng-repeat="type in mfsda.covariateType track by $index">\n\t\t\t\t\t\t\t\t\t<input placeholder="Covariate type" class="input-sm form-control" type="number" ng-model="type"/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<th colspan="1" st-sort="{{key}}">Template</th>\n\t\t\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys" st-sort="{{key}}">{{key}}</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<th colspan="1"></th>\n\t\t\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t\t\t<div class="input-group" ng-if="key==\'group\'">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-sm btn-info" ng-click="projects.setGroupProjectDataDisplayed()" >\n\t\t\t\t\t                \t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t\t\t             \t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<input placeholder="Set group" class="input-sm form-control" type="number" ng-model="projects.analysis.group"/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input st-search="{{key}}" placeholder="search by {{key}}" class="input-sm form-control" type="search" ng-if="key!=\'attachments\'" />\n\t\t\t\t\t\t\t\t\t<div class="input-group" ng-if="key==\'attachments\'">\n\t\t\t\t\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t  \t\t\t<button type="button" class="btn btn-sm btn-info" ng-click="projects.selectVisibleAttachments(true)">\n\t\t\t\t\t                \t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t\t\t             \t\t\t</button>\n\t\t\t\t\t             \t\t\t<button type="button" class="btn btn-sm btn-danger" ng-click="projects.selectVisibleAttachments(false)">\n\t\t\t\t\t                \t\t\t<span class="glyphicon glyphicon-remove"></span>\n\t\t\t\t\t             \t\t\t</button>\n\t\t\t\t\t\t\t  \t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<input placeholder="search for attachments" class="input-sm form-control" ng-model="projects.analysis.attachmentsRegex" type="search" />\n\t\t\t\t\t\t\t  \t\t</div>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr ng-repeat="row in projects.analysis.selectedProjectDataDisplayed">\n\t\t\t\t\t\t\t\t<td colspan="1">\n\t\t\t\t\t\t\t\t\t<input type="checkbox" aria-label="..." ng-model="row.isTemplate">\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t\t\t<div ng-if="key == \'group\'">\n\t\t\t\t\t\t\t\t\t\t<input placeholder="group" class="input-sm form-control" ng-model="row.group" type="number"/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\x3c!-- Deprecated --\x3e\n\t\t\t\t\t\t\t\t\t<div ng-if="key == \'_attachments\'">\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-default" ng-repeat="(key, att) in row[key]" ng-click="morphologicalDataCollection.downloadAttachment(row._id, key, att)">\n\t\t\t\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-eye"></span>{{att}}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\x3c!-- Deprecated --\x3e\n\t\t\t\t\t\t\t\t\t<div ng-if="key == \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t<div ng-repeat="(keycoll, collattachments) in row[key]">\n\t\t\t\t\t\t\t\t\t\t\t<div class="input-group" ng-repeat="(keyatt, att) in projects.getFilteredAttachments(collattachments, keycoll)">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="input-group-addon">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" aria-label="..." ng-model="att.selected">\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<label class="form-control" >{{keyatt}}</label>\n\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div ng-if="!_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\' && key != \'group\'">\n\t\t\t\t\t\t\t\t\t\t{{row[key]}}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div ng-if="_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\' && key != \'group\'">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li ng-repeat="item in row[key]" ng-if="key == \'owners\'">{{item.user}}</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\n\t\t\t\t\t<div class="alert alert-warning" role="alert" ng-if="mfsda.showWarningTemplate">\n\t\t\t\t\t\tYou have selected more than 1 or no template for the MFSDA statistical analysis. <br>\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<br>\n\t\t\t\t\t<div class="row">\n\t\t\t\t\t  <div class="col-md-6">\n\t\t\t\t\t    <div class="input-group">\n\t\t\t\t\t\t\t<span class="input-group-addon" id="basic-addon1">Task name</span>\n\t\t\t\t\t\t\t<input type="text" class="form-control" placeholder="MFSDA task name" aria-describedby="basic-addon3" ng-model="mfsda.name" ng-change="mfsda.taskSubmitted = false">\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="col-md-6">\n\t\t\t\t\t    <div class="input-group">\n\t\t\t\t\t    \t<span class="input-group-addon" id="basic-addon1">Execution server</span>\n\t\t\t\t\t    \t<select class="form-control"  ng-model="clusterpost.selectedServer" ng-options="server.name for server in clusterpost.servers"></select>\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br>\n\t\t\t\t\t<div class="row">\n\t\t\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t\t\t<div class="input-group">\n\t\t\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t\t<button class="btn btn-default" type="button" ng-click="mfsda.editJobParameters=!mfsda.editJobParameters"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>\n\t\t\t\t\t\t\t\t</span>\t\t\t\t\n\t\t\t\t\t\t\t\t<input type="text" class="form-control" placeholder="Additional job parameters" aria-describedby="basic-addon3" ng-model="mfsda.jobParameters" ng-readonly="mfsda.editJobParameters">\n\t\t\t\t  \t\t\t</div>\n\t\t\t\t  \t\t</div>\n\t\t\t  \t\t</div>\n\t\t\t  \t\t<br>\n\t\t\t  \t\t<div class="row">\n\t\t\t  \t\t\t<div class="col-md-12">\n\t\t\t  \t\t\t\t<div class="alert alert-info" role="alert" ng-if="mfsda.taskSubmitted">\n\t\t\t  \t\t\t\t\tThe task {{mfsda.name}} has been succesfully submitted.\n\t\t\t  \t\t\t\t</div>\n\t\t\t  \t\t\t</div>\n\t\t\t  \t\t\t<div class="col-md-12">\n\t\t\t\t  \t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t<button type="button" class="btn btn-success" ng-click="mfsda.submitJob()">\n\t\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type="button" class="btn btn-info" ng-click="mfsda.download()">\n\t\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-download"></span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t  \t\t\t</span>\n\t\t\t\t  \t\t</div>\n\t\t\t  \t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</uib-tab>\n\t<uib-tab heading="Active tasks" index="1">\n\t\t<div class="panel panel-default">\t\t\t\t\n\t\t\t<clusterpost-jobs executable="[\'MFSDA.sh\',\'MFSDAv2.0.0.sh\']" job-callback="mfsda.jobCallback" download-callback="mfsda.download"></clusterpost-jobs>\n\t\t</div>\n\t</uib-tab>\n\t<uib-tab heading="Display results" index="2">\n\t\t<div class="panel panel-default">\n\t\t\t<div class="panel-body">\n\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t<label class="btn btn-default" for="mfsda-file-selector">\n\t\t\t\t\t\t \t<span class="glyphicon glyphicon-folder-open"></span>\n\t\t\t\t\t\t    <input id="mfsda-file-selector" file-model=\'mfsda.fileTemplate\' type="file"  style="display:none;">\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div class="btn-group" role="group">\n\t\t\t\t\t\t\t<select ng-model="mfsda.selectOutput.option" class="form-control" ng-options="option as option.name for option in mfsda.selectOutput.options" ng-change="mfsda.selectOutput.update()">\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type="button" class="btn btn-info" ng-click="vtk.download()">\n\t\t\t\t\t\t\t<span class="glyphicon glyphicon-save"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t<div class="panel panel-default">\n\t\t\t\t\t  <div class="panel-heading">\n\t\t\t\t\t    <h3 class="panel-title">Hue</h3>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="panel-body">\n\t\t\t\t\t    <rzslider class="custom-slider"\n\t\t\t\t\t\trz-slider-model="mfsda.hueSlider.min"\n\t\t\t\t\t\trz-slider-high="mfsda.hueSlider.max"\n\t\t\t\t\t\trz-slider-options="mfsda.hueSlider.options"></rzslider>\t\t\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div ng-if="mfsda.selectOutput.option.name == \'betas\'">\n\t\t\t\t\t<div class="col-md-6">\n\t\t\t\t\t\t<div class="panel panel-default">\n\t\t\t\t\t\t\t<div class="panel-heading">\n\t\t\t\t\t\t\t\t<h3 class="panel-title">Covariate</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="panel-body">\n\t\t\t\t\t\t\t\t<rzslider class="custom-slider"\n\t\t\t\t\t\t\t\trz-slider-model="mfsda.covariateSlider.value"\t\t\t\n\t\t\t\t\t\t\t\trz-slider-options="mfsda.covariateSlider.options"></rzslider>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="col-md-6">\n\t\t\t\t\t\t<div class="panel panel-default">\n\t\t\t\t\t\t\t<div class="panel-heading">\n\t\t\t\t\t\t\t\t<h3 class="panel-title">Component</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="panel-body">\n\t\t\t\t\t\t\t\t<rzslider class="custom-slider"\n\t\t\t\t\t\t\t\trz-slider-model="mfsda.componentSlider.value"\t\t\t\n\t\t\t\t\t\t\t\trz-slider-options="mfsda.componentSlider.options"></rzslider>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div ng-if="mfsda.selectOutput.option.name == \'pValues\'" class="col-md-12">\n\t\t\t\t\t<div class="panel panel-default">\n\t\t\t\t\t\t<div class="panel-heading">\n\t\t\t\t\t\t\t<h3 class="panel-title">pValue</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="panel-body">\n\t\t\t\t\t\t\t<rzslider class="custom-slider"\n\t\t\t\t\t\t\t\trz-slider-model="mfsda.pvalueSlider.value"\t\t\t\n\t\t\t\t\t\t\t\trz-slider-options="mfsda.pvalueSlider.options"></rzslider>\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<br>\n\n\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t<dcbia-vtk ></dcbia-vtk>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</uib-tab>\n</uit-tabset>\n\n'),
a.put("./src/dcbia-preprocessing.template.html",'<uib-tabset active="activeTab">\n\t<uib-tab heading="Select task" index="0">\n\t\t<div ng-if="projects.section == 0">\n\t\t\t<div class="panel panel-default">\n\t\t  \t\t<div class="panel-body">  \t\t\t\n\t\t\t\t\t<div class="col-sm-6 col-md-4" ng-repeat="project in projects.projects">\n\t\t\t\t\t\t<div ng-class="projects.projectsProperties[project._id].class">\n\t\t\t\t\t\t    <div class="thumbnail">\n\t\t\t\t\t\t      <div class="caption">\n\t\t\t\t\t\t        <h3>{{project.name}}</h3>\n\t\t\t\t\t\t        <p>\n\t\t\t\t\t\t        \t<b>Number of items: </b> {{projects.getProjectItems(project)}}\n\t\t\t\t\t\t        </p>\n\t\t\t\t\t        \t<div class="btn-group">\n\t\t\t\t\t\t\t\t <button type="button" class="btn btn-default" ng-click="projects.showSection = 1;projects.select(project)">\n\t\t\t\t\t\t\t\t \t<span class="glyphicon glyphicon-eye-open"></span>\n\t\t\t\t\t\t\t\t </button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="panel panel-default" style="overflow:scroll" ng-if="projects.showSection == 1">\n\t\t\t\t<div class="panel-heading">\n\t\t\t    \tSaved subsets\n\t\t\t  \t</div>\n\t\t\t  \t<div class="panel-body">\n\t\t\t  \t\t<table st-table="projects.displayedAnalyses" st-safe-src="projects.selectedProject.analyses" class="table table-striped">\n\t\t\t            <thead>\n\t\t\t                <tr>\n\t\t\t                    <th colspan="2">\n\t\t\t                        <input st-search="" placeholder="search by name" class="input-sm form-control" type="search"/>\n\t\t\t                    </th>\t                    \n\t\t\t                </tr>\n\t\t\t            </thead>\n\t\t\t            <tbody>\n\t\t\t                <tr ng-repeat="(index, analysis) in projects.displayedAnalyses">\n\t\t\t                    <td>\n\t\t\t                        {{analysis.name}}\n\t\t\t                    </td>\n\t\t\t                    <td>\n\t\t\t                        <button type="button" class="btn btn-info" ng-click="projects.showSubset(index)" >\n\t\t\t                \t\t\t<span class="glyphicon glyphicon-eye-open"></span>\n\t\t\t             \t\t\t</button>\n\t\t\t                    </td>                        \n\t\t\t                </tr>\n\t\t\t            </tbody>\n\t\t\t        </table>\n\t\t\t  \t</div>\n\t\t\t</div>\n\t\t\t<div class="panel panel-default" style="overflow:scroll" ng-if="projects.showSection == 1">\n\t\t\t\t<div class="input-group">\n\t\t\t  \t\t<span class="input-group-addon">Number of axis to run PCA</span>\n\t\t\t  \t\t<input type="text" class="form-control" placeholder="Number of components" aria-describedby="basic-addon3" ng-model="preprocessing.num_components">\n\t\t  \t\t</div>\n\t\t  \t\t<div class="input-group">\n\t\t  \t\t\t<span class="input-group-addon">Choose OA patients or Control patients</span>\n\t                \x3c!-- <input type="checkbox" aria-label="OA" checklist-model="OA" checklist-value="row"> --\x3e\n\t                \t<span class="input-group-addon">OA</span>\n\t                \t<input type="checkbox" class="form-control" ng-model="preprocessing.type_OA" placeholder="OA" ng-change="preprocessing.getFilteredDataSet()">\n\t                \t<span class="input-group-addon">Control</span>\n \t\t\t\t\t\t<input type="checkbox" class="form-control" ng-model="preprocessing.type_Control" placeholder="Control" ng-change="preprocessing.getFilteredDataSet()">\n \t\t\t\t\t\t\x3c!-- <span class="input-group-addon">{{$scope.preprocessing.numCovariates}}}</span> --\x3e\n\t            </div>\n\t\t\t\t<div class="panel-body">\n\t\t\t\t\t<div class="input-group">\n\t\t\t  \t\t\t<span class="input-group-addon">Name</span>\n\t\t\t  \t\t\t<input type="text" class="form-control" placeholder="Subset name" aria-describedby="basic-addon3" ng-model="projects.analysis.name">\n\t\t  \t\t\t</div>\n\t\t  \t\t\t<div ng-if="preprocessing.OA">  \t\t\t\t    \n\t\t\t\t\t\t<table st-table="projects.analysis.selectedProjectDataDisplayed" st-safe-src="projects.analysis.selectedProjectDataOA" class="table table-striped">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys" st-sort="{{key}}">{{key}}</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr ng-repeat="row in projects.analysis.selectedProjectDataDisplayed">\n\t\t\t\t\t\t\t\t\t<td colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t\t\t\t<div ng-if="!_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t\t{{row[key]}}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div ng-if="_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li ng-repeat="item in row[key]" ng-if="key == \'owners\'">{{item.user}}</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div ng-if="preprocessing.Control">  \t\t\t\t    \n\t\t\t\t\t\t<table st-table="projects.analysis.selectedProjectDataDisplayed" st-safe-src="projects.analysis.selectedProjectDataControl" class="table table-striped">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys" st-sort="{{key}}">{{key}}</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr ng-repeat="row in projects.analysis.selectedProjectDataDisplayed">\n\t\t\t\t\t\t\t\t\t<td colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t\t\t\t<div ng-if="!_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t\t{{row[key]}}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div ng-if="_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li ng-repeat="item in row[key]" ng-if="key == \'owners\'">{{item.user}}</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div ng-if="preprocessing.Neutral">  \t\t\t\t    \n\t\t\t\t\t\t<table st-table="projects.analysis.selectedProjectDataDisplayed" st-safe-src="projects.analysis.selectedProjectDataNeutral" class="table table-striped">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys" st-sort="{{key}}">{{key}}</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr ng-repeat="row in projects.analysis.selectedProjectDataDisplayed">\n\t\t\t\t\t\t\t\t\t<td colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t\t\t\t<div ng-if="!_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t\t{{row[key]}}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div ng-if="_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li ng-repeat="item in row[key]" ng-if="key == \'owners\'">{{item.user}}</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="alert alert-warning" role="alert" ng-if="preprocessing.showWarningNumComponent">\n\t\t\t\t\t\tNumber of components wrong ! You have to choose between 1 and {{preprocessing.length}} <br>\n\t\t\t\t    </div>\n\t\t\t\t    <div class="alert alert-warning" role="alert" ng-if="preprocessing.showWarningPatienttype">\n\t\t\t\t\t\tYou have to choose Control patients or OA patients or both<br>\n\t\t\t\t    </div>\n\t\t\t\t\t<br>\n\t\t\t\t\t<div class="row">\n\t\t\t\t\t  <div class="col-md-6">\n\t\t\t\t\t    <div class="input-group">\n\t\t\t\t\t\t\t<span class="input-group-addon" id="basic-addon1">Task name</span>\n\t\t\t\t\t\t\t<input type="text" class="form-control" placeholder="preprocessing task name" aria-describedby="basic-addon3" ng-model="preprocessing.name">\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="col-md-6">\n\t\t\t\t\t    <div class="input-group">\n\t\t\t\t\t    \t<span class="input-group-addon" id="basic-addon1">Execution server</span>\n\t\t\t\t\t    \t<select class="form-control"  ng-model="clusterpost.selectedServer" ng-options="server.name for server in clusterpost.servers"></select>\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br>\n\t\t\t\t\t<div class="row">\n\t\t\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t\t\t<div class="input-group">\n\t\t\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t\t<button class="btn btn-default" type="button" ng-click="preprocessing.editJobParameters=!preprocessing.editJobParameters"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>\n\t\t\t\t\t\t\t\t</span>\t\t\t\t\n\t\t\t\t\t\t\t\t<input type="text" class="form-control" placeholder="Additional job parameters" aria-describedby="basic-addon3" ng-model="preprocessing.jobParameters" ng-readonly="preprocessing.editJobParameters">\n\t\t\t\t  \t\t\t</div>\n\t\t\t\t  \t\t</div>\n\t\t\t  \t\t</div>\n\t\t\t  \t\t<br>\n\t\t\t  \t\t<div class="row">\n\t\t\t  \t\t\t<div class="col-md-12">\n\t\t\t\t  \t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t<button type="button" class="btn btn-success" ng-click="preprocessing.submitJob()">\n\t\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t  \t\t\t</span>\n\t\t\t\t  \t\t</div>\n\t\t\t  \t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</uib-tab>\n\t<uib-tab heading="Active tasks" index="1">\n\t\t<div class="panel panel-default">\t\n\t\t\t<div class="panel-body"> \t\t\t\n\t\t\t\t<clusterpost-jobs executable="\'preprocessing.sh\'" job-callback="preprocessing.jobCallback" download-callback="preprocessing.download"></clusterpost-jobs>\n\t\t\t</div>\n\t\t</div>\n\t</uib-tab>\n\t<uib-tab heading="Results" index="2">\n\t\t<div class="panel panel-default">\n\t\t\t<div class="row">\n\t\t\t\t<div class="column">\n\t\t\t\t\t<h3>Modify Colors Bar</h3>\n\t\t\t\t\t<div ng-repeat="color in heat_map.attributes.colors track by $index">\n\t\t\t\t\t\t<input type="color" class="form-control" placeholder="Color" aria-describedby="basic-addon3" ng-model="heat_map.attributes.colors[$index]">\n\t\t\t\t\t</div>\n\t\t\t\t\t<button ng-click="heat_map.attributes.colors.push(\'#ffffff\')">+ Add Color</button>\n\t\t\t\t\t<button ng-click = "heat_map.attributes.colors.pop()">- Remove one element</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="column">\n\t\t\t\t\t<h3>Modify Scale</h3>\n\t\t\t\t\t<div ng-repeat="scale in heat_map.attributes.scale track by $index">\n\t\t\t\t\t\t<input type="Number" class="form-control" placeholder="Level" aria-describedby="basic-addon3" ng-model="heat_map.attributes.scale[$index]">\n\t\t\t\t\t</div>\n\t\t\t\t\t<button ng-click="heat_map.attributes.scale.push(\'1.0\')">+ Add value to the scale</button>\n\t\t\t\t\t<button ng-click = "heat_map.attributes.scale.pop()">- Remove one element</button>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t\t<div class="panel-body" id="div1">\n\t\t\t\t<preprocessing-plot-chart data="heat_map.pvalues"></preprocessing-plot-chart>\n\t\t\t</div>\n\t\t\t<div class="panel-body" id="div2">\n\t\t\t\t<preprocessing-plot-chart data="heat_map.pearsoncorr"></preprocessing-plot-chart>\n\t\t\t</div>\n\t\t</div>\n\t</uib-tab>\n</uit-tabset>\n'),a.put("./src/index_test.html",'<meta charset="utf-8">\n     <style>\n      /* disable text selection */\n      svg *::selection {\n         background : transparent;\n      }\n     \n      svg *::-moz-selection {\n         background:transparent;\n      } \n     \n      svg *::-webkit-selection {\n         background:transparent;\n      }\n      rect.selection {\n        stroke          : #333;\n        stroke-dasharray: 4px;\n        stroke-opacity  : 0.5;\n        fill            : transparent;\n      }\n\n      rect.cell-border {\n        stroke: #eee;\n        stroke-width:0.3px;   \n      }\n\n      rect.cell-selected {\n        stroke: rgb(51,102,153);\n        stroke-width:0.5px;   \n      }\n\n      rect.cell-hover {\n        stroke: #F00;\n        stroke-width:0.3px;   \n      }\n\n      text.mono {\n        font-size: 9pt;\n                font-family: Consolas, courier;\n        fill: #aaa;\n      }\n\n      text.text-selected {\n        fill: #000;\n      }\n\n      text.text-highlight {\n        fill: #c00;\n      }\n      text.text-hover {\n        fill: #00C;\n      }\n      #tooltip {\n        position: absolute;\n        width: 200px;\n        height: auto;\n        padding: 10px;\n        background-color: white;\n        -webkit-border-radius: 10px;\n        -moz-border-radius: 10px;\n        border-radius: 10px;\n        -webkit-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);\n        -moz-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);\n        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);\n        pointer-events: none;\n      }\n\n      #tooltip.hidden {\n        display: none;\n      }\n\n      #tooltip p {\n        margin: 0;\n        font-family: sans-serif;\n        font-size: 12px;\n        line-height: 20px;\n              }\n    </style>\n\n</head>\n<div id="tooltip" class="hidden">\n        <p><span id="value"></p>\n</div>\n<script src="http://d3js.org/d3.v3.min.js"><\/script>\nOrder: \n  <select id="order">\n  <option value="hclust">by cluster</option>\n  <option value="probecontrast">by probe name and contrast name</option>\n  <option value="probe">by probe name</option>\n  <option value="contrast">by contrast name</option>\n  <option value="custom">by log2 ratio</option>\n  </select>\n  </select>\n<div id="chart" style=\'overflow:auto; width:960px; height:480px;\'></div>\n\n<script type="text/javascript">\nvar margin = { top: 150, right: 10, bottom: 50, left: 100 },\n  cellSize=12;\n  col_number=60;\n  row_number=50;\n  width = cellSize*col_number, // - margin.left - margin.right,\n  height = cellSize*row_number , // - margin.top - margin.bottom,\n  //gridSize = Math.floor(width / 24),\n  legendElementWidth = cellSize*2.5,\n  colorBuckets = 21,\n  colors = [\'#005824\',\'#1A693B\',\'#347B53\',\'#4F8D6B\',\'#699F83\',\'#83B09B\',\'#9EC2B3\',\'#B8D4CB\',\'#D2E6E3\',\'#EDF8FB\',\'#FFFFFF\',\'#F1EEF6\',\'#E6D3E1\',\'#DBB9CD\',\'#D19EB9\',\'#C684A4\',\'#BB6990\',\'#B14F7C\',\'#A63467\',\'#9B1A53\',\'#91003F\'];\n  hcrow = [49,11,30,4,18,6,12,20,19,33,32,26,44,35,38,3,23,41,22,10,2,15,16,36,8,25,29,7,27,34,48,31,45,43,14,9,39,1,37,47,42,21,40,5,28,46,50,17,24,13], // change to gene name or probe id\n  hccol = [6,5,41,12,42,21,58,56,14,16,43,15,17,46,47,48,54,49,37,38,25,22,7,8,2,45,9,20,24,44,23,19,13,40,11,1,39,53,10,52,3,26,27,60,50,51,59,18,31,32,30,4,55,28,29,57,36,34,33,35], // change to gene name or probe id\n  rowLabel = [\'1759080_s_at\',\'1759302_s_at\',\'1759502_s_at\',\'1759540_s_at\',\'1759781_s_at\',\'1759828_s_at\',\'1759829_s_at\',\'1759906_s_at\',\'1760088_s_at\',\'1760164_s_at\',\'1760453_s_at\',\'1760516_s_at\',\'1760594_s_at\',\'1760894_s_at\',\'1760951_s_at\',\'1761030_s_at\',\'1761128_at\',\'1761145_s_at\',\'1761160_s_at\',\'1761189_s_at\',\'1761222_s_at\',\'1761245_s_at\',\'1761277_s_at\',\'1761434_s_at\',\'1761553_s_at\',\'1761620_s_at\',\'1761873_s_at\',\'1761884_s_at\',\'1761944_s_at\',\'1762105_s_at\',\'1762118_s_at\',\'1762151_s_at\',\'1762388_s_at\',\'1762401_s_at\',\'1762633_s_at\',\'1762701_s_at\',\'1762787_s_at\',\'1762819_s_at\',\'1762880_s_at\',\'1762945_s_at\',\'1762983_s_at\',\'1763132_s_at\',\'1763138_s_at\',\'1763146_s_at\',\'1763198_s_at\',\'1763383_at\',\'1763410_s_at\',\'1763426_s_at\',\'1763490_s_at\',\'1763491_s_at\'], // change to gene name or probe id\n  colLabel = [\'con1027\',\'con1028\',\'con1029\',\'con103\',\'con1030\',\'con1031\',\'con1032\',\'con1033\',\'con1034\',\'con1035\',\'con1036\',\'con1037\',\'con1038\',\'con1039\',\'con1040\',\'con1041\',\'con108\',\'con109\',\'con110\',\'con111\',\'con112\',\'con125\',\'con126\',\'con127\',\'con128\',\'con129\',\'con130\',\'con131\',\'con132\',\'con133\',\'con134\',\'con135\',\'con136\',\'con137\',\'con138\',\'con139\',\'con14\',\'con15\',\'con150\',\'con151\',\'con152\',\'con153\',\'con16\',\'con17\',\'con174\',\'con184\',\'con185\',\'con186\',\'con187\',\'con188\',\'con189\',\'con191\',\'con192\',\'con193\',\'con194\',\'con199\',\'con2\',\'con200\',\'con201\',\'con21\']; // change to contrast name\n\nd3.tsv("data_heatmap.tsv",\nfunction(d) {\n  return {\n    row:   +d.row_idx,\n    col:   +d.col_idx,\n    value: +d.log2ratio\n  };\n},\nfunction(error, data) {\n  var colorScale = d3.scale.quantile()\n      .domain([ -10 , 0, 10])\n      .range(colors);\n  \n  var svg = d3.select("#chart").append("svg")\n      .attr("width", width + margin.left + margin.right)\n      .attr("height", height + margin.top + margin.bottom)\n      .append("g")\n      .attr("transform", "translate(" + margin.left + "," + margin.top + ")")\n      ;\n  var rowSortOrder=false;\n  var colSortOrder=false;\n  var rowLabels = svg.append("g")\n      .selectAll(".rowLabelg")\n      .data(rowLabel)\n      .enter()\n      .append("text")\n      .text(function (d) { return d; })\n      .attr("x", 0)\n      .attr("y", function (d, i) { return hcrow.indexOf(i+1) * cellSize; })\n      .style("text-anchor", "end")\n      .attr("transform", "translate(-6," + cellSize / 1.5 + ")")\n      .attr("class", function (d,i) { return "rowLabel mono r"+i;} ) \n      .on("mouseover", function(d) {d3.select(this).classed("text-hover",true);})\n      .on("mouseout" , function(d) {d3.select(this).classed("text-hover",false);})\n      .on("click", function(d,i) {rowSortOrder=!rowSortOrder; sortbylabel("r",i,rowSortOrder);d3.select("#order").property("selectedIndex", 4).node().focus();;})\n      ;\n\n  var colLabels = svg.append("g")\n      .selectAll(".colLabelg")\n      .data(colLabel)\n      .enter()\n      .append("text")\n      .text(function (d) { return d; })\n      .attr("x", 0)\n      .attr("y", function (d, i) { return hccol.indexOf(i+1) * cellSize; })\n      .style("text-anchor", "left")\n      .attr("transform", "translate("+cellSize/2 + ",-6) rotate (-90)")\n      .attr("class",  function (d,i) { return "colLabel mono c"+i;} )\n      .on("mouseover", function(d) {d3.select(this).classed("text-hover",true);})\n      .on("mouseout" , function(d) {d3.select(this).classed("text-hover",false);})\n      .on("click", function(d,i) {colSortOrder=!colSortOrder;  sortbylabel("c",i,colSortOrder);d3.select("#order").property("selectedIndex", 4).node().focus();;})\n      ;\n\n  var heatMap = svg.append("g").attr("class","g3")\n        .selectAll(".cellg")\n        .data(data,function(d){return d.row+":"+d.col;})\n        .enter()\n        .append("rect")\n        .attr("x", function(d) { return hccol.indexOf(d.col) * cellSize; })\n        .attr("y", function(d) { return hcrow.indexOf(d.row) * cellSize; })\n        .attr("class", function(d){return "cell cell-border cr"+(d.row-1)+" cc"+(d.col-1);})\n        .attr("width", cellSize)\n        .attr("height", cellSize)\n        .style("fill", function(d) { return colorScale(d.value); })\n        /* .on("click", function(d) {\n               var rowtext=d3.select(".r"+(d.row-1));\n               if(rowtext.classed("text-selected")==false){\n                   rowtext.classed("text-selected",true);\n               }else{\n                   rowtext.classed("text-selected",false);\n               }\n        })*/\n        .on("mouseover", function(d){\n               //highlight text\n               d3.select(this).classed("cell-hover",true);\n               d3.selectAll(".rowLabel").classed("text-highlight",function(r,ri){ return ri==(d.row-1);});\n               d3.selectAll(".colLabel").classed("text-highlight",function(c,ci){ return ci==(d.col-1);});\n        \n               //Update the tooltip position and value\n               d3.select("#tooltip")\n                 .style("left", (d3.event.pageX+10) + "px")\n                 .style("top", (d3.event.pageY-10) + "px")\n                 .select("#value")\n                 .text("lables:"+rowLabel[d.row-1]+","+colLabel[d.col-1]+"\\ndata:"+d.value+"\\nrow-col-idx:"+d.col+","+d.row+"\\ncell-xy "+this.x.baseVal.value+", "+this.y.baseVal.value);  \n               //Show the tooltip\n               d3.select("#tooltip").classed("hidden", false);\n        })\n        .on("mouseout", function(){\n               d3.select(this).classed("cell-hover",false);\n               d3.selectAll(".rowLabel").classed("text-highlight",false);\n               d3.selectAll(".colLabel").classed("text-highlight",false);\n               d3.select("#tooltip").classed("hidden", true);\n                       })\n        ;\n\n  var legend = svg.selectAll(".legend")\n      .data([-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10])\n      .enter().append("g")\n      .attr("class", "legend");\n \n  legend.append("rect")\n    .attr("x", function(d, i) { return legendElementWidth * i; })\n    .attr("y", height+(cellSize*2))\n    .attr("width", legendElementWidth)\n    .attr("height", cellSize)\n    .style("fill", function(d, i) { return colors[i]; });\n \n  legend.append("text")\n    .attr("class", "mono")\n    .text(function(d) { return d; })\n    .attr("width", legendElementWidth)\n    .attr("x", function(d, i) { return legendElementWidth * i; })\n    .attr("y", height + (cellSize*4));\n\n// Change ordering of cells\n\n  function sortbylabel(rORc,i,sortOrder){\n       var t = svg.transition().duration(3000);\n       var log2r=[];\n       var sorted; // sorted is zero-based index\n       d3.selectAll(".c"+rORc+i) \n         .filter(function(ce){\n            log2r.push(ce.value);\n          })\n       ;\n       if(rORc=="r"){ // sort log2ratio of a gene\n         sorted=d3.range(col_number).sort(function(a,b){ if(sortOrder){ return log2r[b]-log2r[a];}else{ return log2r[a]-log2r[b];}});\n         t.selectAll(".cell")\n           .attr("x", function(d) { return sorted.indexOf(d.col-1) * cellSize; })\n           ;\n         t.selectAll(".colLabel")\n          .attr("y", function (d, i) { return sorted.indexOf(i) * cellSize; })\n         ;\n       }else{ // sort log2ratio of a contrast\n                sorted=d3.range(row_number).sort(function(a,b){if(sortOrder){ return log2r[b]-log2r[a];}else{ return log2r[a]-log2r[b];}});\n         t.selectAll(".cell")\n           .attr("y", function(d) { return sorted.indexOf(d.row-1) * cellSize; })\n           ;\n         t.selectAll(".rowLabel")\n          .attr("y", function (d, i) { return sorted.indexOf(i) * cellSize; })\n         ;\n       }\n  }\n\n  d3.select("#order").on("change",function(){\n    order(this.value);\n  });\n  \n  function order(value){\n   if(value=="hclust"){\n    var t = svg.transition().duration(3000);\n    t.selectAll(".cell")\n      .attr("x", function(d) { return hccol.indexOf(d.col) * cellSize; })\n      .attr("y", function(d) { return hcrow.indexOf(d.row) * cellSize; })\n      ;\n\n    t.selectAll(".rowLabel")\n      .attr("y", function (d, i) { return hcrow.indexOf(i+1) * cellSize; })\n      ;\n\n    t.selectAll(".colLabel")\n      .attr("y", function (d, i) { return hccol.indexOf(i+1) * cellSize; })\n      ;\n\n   }else if (value=="probecontrast"){\n    var t = svg.transition().duration(3000);\n    t.selectAll(".cell")\n      .attr("x", function(d) { return (d.col - 1) * cellSize; })\n      .attr("y", function(d) { return (d.row - 1) * cellSize; })\n      ;\n\n    t.selectAll(".rowLabel")\n      .attr("y", function (d, i) { return i * cellSize; })\n      ;\n\n    t.selectAll(".colLabel")\n          .attr("y", function (d, i) { return i * cellSize; })\n      ;\n\n   }else if (value=="probe"){\n    var t = svg.transition().duration(3000);\n    t.selectAll(".cell")\n      .attr("y", function(d) { return (d.row - 1) * cellSize; })\n      ;\n\n    t.selectAll(".rowLabel")\n      .attr("y", function (d, i) { return i * cellSize; })\n      ;\n   }else if (value=="contrast"){\n    var t = svg.transition().duration(3000);\n    t.selectAll(".cell")\n      .attr("x", function(d) { return (d.col - 1) * cellSize; })\n      ;\n    t.selectAll(".colLabel")\n      .attr("y", function (d, i) { return i * cellSize; })\n      ;\n   }\n  }\n  // \n  var sa=d3.select(".g3")\n      .on("mousedown", function() {\n          if( !d3.event.altKey) {\n             d3.selectAll(".cell-selected").classed("cell-selected",false);\n             d3.selectAll(".rowLabel").classed("text-selected",false);\n             d3.selectAll(".colLabel").classed("text-selected",false);\n          }\n         var p = d3.mouse(this);\n         sa.append("rect")\n         .attr({\n             rx      : 0,\n             ry      : 0,\n             class   : "selection",\n             x       : p[0],\n             y       : p[1],\n             width   : 1,\n             height  : 1\n         })\n      })\n            .on("mousemove", function() {\n         var s = sa.select("rect.selection");\n      \n         if(!s.empty()) {\n             var p = d3.mouse(this),\n                 d = {\n                     x       : parseInt(s.attr("x"), 10),\n                     y       : parseInt(s.attr("y"), 10),\n                     width   : parseInt(s.attr("width"), 10),\n                     height  : parseInt(s.attr("height"), 10)\n                 },\n                 move = {\n                     x : p[0] - d.x,\n                     y : p[1] - d.y\n                 }\n             ;\n      \n             if(move.x < 1 || (move.x*2<d.width)) {\n                 d.x = p[0];\n                 d.width -= move.x;\n             } else {\n                 d.width = move.x;       \n             }\n      \n             if(move.y < 1 || (move.y*2<d.height)) {\n                 d.y = p[1];\n                 d.height -= move.y;\n             } else {\n                 d.height = move.y;       \n             }\n             s.attr(d);\n      \n                 // deselect all temporary selected state objects\n             d3.selectAll(\'.cell-selection.cell-selected\').classed("cell-selected", false);\n             d3.selectAll(".text-selection.text-selected").classed("text-selected",false);\n\n             d3.selectAll(\'.cell\').filter(function(cell_d, i) {\n                 if(\n                     !d3.select(this).classed("cell-selected") && \n                         // inner circle inside selection frame\n                     (this.x.baseVal.value)+cellSize >= d.x && (this.x.baseVal.value)<=d.x+d.width && \n                                          (this.y.baseVal.value)+cellSize >= d.y && (this.y.baseVal.value)<=d.y+d.height\n                 ) {\n      \n                     d3.select(this)\n                     .classed("cell-selection", true)\n                     .classed("cell-selected", true);\n\n                     d3.select(".r"+(cell_d.row-1))\n                     .classed("text-selection",true)\n                     .classed("text-selected",true);\n\n                     d3.select(".c"+(cell_d.col-1))\n                     .classed("text-selection",true)\n                     .classed("text-selected",true);\n                 }\n             });\n         }\n      })\n      .on("mouseup", function() {\n            // remove selection frame\n         sa.selectAll("rect.selection").remove();\n      \n             // remove temporary selection marker class\n         d3.selectAll(\'.cell-selection\').classed("cell-selection", false);\n         d3.selectAll(".text-selection").classed("text-selection",false);\n      })\n      .on("mouseout", function() {\n         if(d3.event.relatedTarget.tagName==\'html\') {\n                 // remove selection frame\n             sa.selectAll("rect.selection").remove();\n                 // remove temporary selection marker class\n             d3.selectAll(\'.cell-selection\').classed("cell-selection", false);\n             d3.selectAll(".rowLabel").classed("text-selected",false);\n             d3.selectAll(".colLabel").classed("text-selected",false);\n         }\n      })\n      ;\n});\n<\/script>\n')}]);