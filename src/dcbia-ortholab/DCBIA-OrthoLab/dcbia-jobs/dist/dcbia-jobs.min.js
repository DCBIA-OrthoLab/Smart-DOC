angular.module("dcbia-jobs",["clusterpost-list"]),angular.module("dcbia-jobs").directive("dcbiaMfsda",["$routeParams","dcbia","clusterauth","clusterpostService",function($routeParams,dcbia,clusterauth,clusterpostService){function link($scope,$attrs,$filter){var minimist=require("minimist"),stringArgv=require("string-argv");clusterauth.getUser().then(function(a){$scope.user=a}),clusterauth.getScopes().then(function(a){$scope.userScopes=a.data[0]}),$scope.projects={newProject:{collections:[],type:"project",patients:"",name:"",description:""},projects:[],projectsProperties:{defaultProject:{class:""}},selectedProjectData:{},section:0,showSection:0},$scope.defaultProject={_id:"defaultProject",name:"All projects",type:"project",items:0},$scope.morphologicalDataCollection={collections:[],selectedCollections:[]},$scope.morphologicalCheckBox=!1,$scope.clinicalDataCollection={collections:[],selectedCollections:[]},$scope.clinicalCheckBox=!1,$scope.csv={},$scope.$watch("csv.file",function(){$scope.csv.file&&$scope.csv.readFile().then(function(){$scope.$apply()})}),$scope.projects.getProjects=function(){return dcbia.getProjects().then(function(a){delete $scope.projects.selectedProject,$scope.projects.projects=a.data,_.each($scope.projects.projects,function(a){$scope.projects.projectsProperties[a._id]={class:""}})}).catch(console.error)},$scope.projects.selectProject=function(a){if($scope.projects.selectedProject&&($scope.projects.projectsProperties[$scope.projects.selectedProject._id].class=""),$scope.projects.selectedProject=a,$scope.projects.projectsProperties[a._id].class="alert alert-info",$scope.clinicalDataCollection.selectedCollections=[],$scope.morphologicalDataCollection.selectedCollections=[],_.isObject($scope.projects.selectedProject.collections))return $scope.clinicalDataCollection.selectedCollections=$scope.projects.selectedProject.collections.clinicalDataCollection,$scope.morphologicalDataCollection.selectedCollections=$scope.projects.selectedProject.collections.morphologicalDataCollection,Promise.all([Promise.all(_.map($scope.clinicalDataCollection.selectedCollections,dcbia.getClinicalData)).then(function(a){var b=[];return _.each(_.compact(_.pluck(a,"data")),function(a){b=$scope.projects.mergeCollections(b,a)}),b}),Promise.all(_.map($scope.morphologicalDataCollection.selectedCollections,dcbia.getMorphologicalData)).then(function(a){var b=[];return _.each(_.compact(_.pluck(a,"data")),function(a){b=$scope.projects.mergeCollections(b,a)}),b})]).then(function(a){$scope.projects.selectedProjectData=$scope.projects.mergeCollections(a[0],a[1]),$scope.projects.selectedProjectDataKeys=$scope.projects.getProjectDataKeys($scope.projects.selectedProjectData),$scope.projects.selectedProjectPatients=_.map($scope.projects.selectedProjectData,function(a){return a.patientId})});_.each($scope.projects.selectedProject.collections,function(a){var b=_.find($scope.clinicalDataCollection.collections,function(b){return b._id===a._id});b&&$scope.clinicalDataCollection.selectedCollections.push(b.name);var c=_.find($scope.morphologicalDataCollection.collections,function(b){return b._id===a._id});c&&$scope.morphologicalDataCollection.selectedCollections.push(c.name)}),Promise.all([$scope.clinical.getSelectedProjectData(),$scope.morphological.getSelectedProjectData()]).then(function(){$scope.projects.selectedProjectData=$scope.projects.mergeCollections($scope.clinical.data,$scope.morphological.data),$scope.projects.selectedProjectDataKeys=$scope.projects.getProjectDataKeys($scope.projects.selectedProjectData),$scope.projects.selectedProjectPatients=_.map($scope.projects.selectedProjectData,function(a){return a.patientId})})},$scope.projects.getFilteredAttachments=function(a){if($scope.projects.analysis.attachmentsRegex&&""!=$scope.projects.analysis.attachmentsRegex){var b=new RegExp("^"+$scope.projects.analysis.attachmentsRegex.split("*").join(".*")+"$"),c=_.filter(_.keys(a),function(a){return b.test(a)});return _.pick(a,c)}return a},$scope.projects.setGroupProjectDataDisplayed=function(){_.each($scope.projects.analysis.selectedProjectDataDisplayed,function(a){a.group=$scope.projects.analysis.group})},$scope.projects.getProjectKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,_.keys(b)},$scope.projects.getProjectDataKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,b.type&&delete b.type,b.owner&&delete b.owner,b.owners&&delete b.owners,b.formId&&delete b.formId,b.date&&delete b.date,b.scope&&delete b.scope,_.keys(b)},$scope.projects.select=function(a){return dcbia.getProject(a._id).then(function(a){var b=a.data;$scope.projects.selectProject(b),$scope.projects.selectedProjectKeys=$scope.projects.getProjectKeys([b])}).catch(console.error)},$scope.projects.getProjectItems=function(a){var b=0;return _.isObject(a.collections)&&!_.isArray(a.collections)?(_.each(a.collections.clinicalDataCollection,function(a){var c=_.find($scope.clinicalDataCollection.collections,function(b){return a===b._id});c&&(b+=c.items.length)}),_.each(a.collections.morphologicalDataCollection,function(a){var c=_.find($scope.morphologicalDataCollection.collections,function(b){return a===b._id});c&&(b+=c.items.length)})):_.each(a.collections,function(a){_.each($scope.clinicalDataCollection.collections,function(c){a._id==c._id&&(b+=c.items.length)}),_.each($scope.morphologicalDataCollection.collections,function(c){a._id==c._id&&(b+=c.items.length)})}),b},$scope.projects.mergeCollections=function(a,b){return _.each(b,function(b){if(b&&b._attachments&&b._id){var c={};c[b._id]=b._attachments,b.attachments=c,delete b._attachments}b._id&&delete b._id,b._rev&&delete b._rev,b.owners&&delete b.owners,b.owner&&delete b.owner;var d=_.find(a,function(a){return a.patientId===b.patientId});d?_.extend(d,b):a.push(b)}),_.each(a,function(a){"mergedCollection"!==a.type&&(a.type="mergedCollection")}),a},$scope.morphologicalDataCollection.getMorphologicalDataCollections=function(){return dcbia.getMorphologicalDataCollections().then(function(a){$scope.morphologicalDataCollection.collections=a.data}).catch(console.error)},$scope.morphologicalDataCollection.checkAll=function(a){$scope.morphologicalDataCollection.selectedCollections=[],a&&_.each($scope.morphologicalDataCollection.collections,function(a){$scope.morphologicalDataCollection.selectedCollections.push(a.name)})},$scope.morphologicalDataCollection.isCollectionInProject=function(a){var b=!1;return _.each($scope.morphologicalDataCollection.selectedCollections,function(c){a.name===c&&(b=!0)}),b},$scope.clinicalDataCollection.getClinicalDataCollections=function(){return dcbia.getClinicalDataCollections().then(function(a){$scope.clinicalDataCollection.collections=a.data}).catch(console.error)},$scope.clinicalDataCollection.isCollectionInProject=function(a){var b=!1;return _.each($scope.clinicalDataCollection.selectedCollections,function(c){a.name===c&&(b=!0)}),b},$scope.projects.showSubset=function(a){var b=$scope.projects.selectedProject.analyses[a],c=_.filter($scope.projects.selectedProjectData,function(a){return-1!==b.selectedPatients.indexOf(a.patientId)});c=_.map(c,function(a){return _.pick(a,function(a,c,d){return-1!==b.selectedVariables.indexOf(c)})}),$scope.projects.analysis={},$scope.projects.analysis.name=b.name,$scope.projects.analysis.selectedProjectData=c,$scope.projects.analysis.selectedProjectDataKeys=b.selectedVariables},$scope.projects.selectVisibleAttachments=function(a){_.each($scope.projects.analysis.selectedProjectDataDisplayed,function(b){_.each(b.attachments,function(b){_.each($scope.projects.getFilteredAttachments(b),function(b){b.selected=a})})})},$scope.clusterpost={},$scope.mfsda={editJobParameters:!0,jobParameters:$scope.jobParameters},$scope.mfsda.submitJob=function(){var a=$scope.mfsda.getData(),b={};$scope.mfsda.name&&(b.name=$scope.mfsda.name),b.executable="MFSDA.sh",b.parameters=[{flag:"-shapeData",name:"shapeData.txt"},{flag:"-coordData",name:"template.vtk"},{flag:"-covariates",name:"covariates.txt"},{flag:"-covariateInterest",name:"covariateInterest.txt"},{flag:"-covariateType",name:"covariateType.txt"},{flag:"-outputDir",name:"./output"}],b.type="job",b.inputs=a.inputs,b.executionserver=$scope.clusterpost.selectedServer.name,b.outputs=[{name:"output",type:"tar.gz"}],b.userEmail=$scope.user.email,b.jobparameters=[];var c=minimist(stringArgv($scope.mfsda.jobParameters));return _.each(c,function(a,c){_.isArray(a)?_.each(a,function(a){b.jobparameters.push({name:a,flag:"-"+c})}):b.jobparameters.push({name:a,flag:"-"+c})}),clusterpostService.createAndSubmitJob(b,_.pluck(a.data,"name"),_.pluck(a.data,"data")).then(function(a){console.log(a)})},$scope.mfsda.download=function(){var a=$scope.mfsda.getData();console.log(a)},$scope.mfsda.getData=function(){var mfsda={};$scope.mfsda.showWarningTemplate=!1;var covariatesName=_.clone($scope.projects.analysis.selectedProjectDataKeys),covariates=_.clone($scope.projects.analysis.selectedProjectData),mapnames={},templates=_.map(covariates,function(a){if(a.isTemplate)return _.map(a.attachments,function(a,b){return _.map(a,function(a,c){if(a.selected){var d={name:"",local:{uri:""}};return d.local.uri=b+"/"+c,mapnames[c]?(d.name=mapnames[c]+"_"+c,mapnames[c]+=1):(mapnames[c]=1,d.name=c),d}return""})})}),template=_.compact(_.flatten(templates));1!=template.length&&($scope.mfsda.showWarningTemplate=!0),covariatesName.splice(0,0,"group"),covariatesName.splice(_.indexOf(covariatesName,"patientId"),1),covariatesName.splice(_.indexOf(covariatesName,"attachments"),1);try{var result=json2csv({data:covariates,fields:covariatesName}).split("\n");result.splice(0,1),covariatescsv=result.join("\n")}catch(a){console.error(a)}var covariatesInterest=_.map(covariatesName,function(){return"1"}).join(","),covariatesType=_.map(covariatesName,function(cn){var data=_.pluck(covariates,cn),datatype=_.map(data,function(a){return _.isNumber(a)?Number.isInteger(a):1});return Number(!eval(datatype.join("&&")))}).join(","),filelistobj=_.compact(_.flatten(_.map(covariates,function(a){return a.isTemplate?null:_.compact(_.flatten(_.map(a.attachments,function(a,b){return _.map(a,function(a,c){if(a.selected){var d={name:"",local:{uri:""}};return d.local.uri=b+"/"+c,mapnames[c]?(d.name=mapnames[c]+"_"+c,mapnames[c]+=1):(mapnames[c]=1,d.name=c),d}return""})})))})));return mfsda.data=[],mfsda.data.push({name:"shapeData.txt",data:_.pluck(filelistobj,"name").join("\n")}),mfsda.data.push({name:"covariates.txt",data:covariatescsv}),mfsda.data.push({name:"covariatesInterest.txt",data:covariatesInterest}),mfsda.data.push({name:"covariatesType.txt",data:covariatesType}),1==template.length&&filelistobj.push(template[0]),filelistobj.push({name:"shapeData.txt"}),filelistobj.push({name:"covariates.txt"}),filelistobj.push({name:"covariatesInterest.txt"}),filelistobj.push({name:"covariatesType.txt"}),mfsda.inputs=filelistobj,mfsda},$scope.csv.export=function(a){var b;b=$scope.projects.selectedProject&&a._id===$scope.projects.selectedProject._id?Promise.resolve(!0):$scope.projects.select(a),b.then(function(){var a=($scope.projects.getProjectKeys([$scope.projects.selectedProject]),"name:,"+$scope.projects.selectedProject.name+"\n");a+="description:,"+$scope.projects.selectedProject.description+"\n",a+="patients:,"+$scope.projects.selectedProject.patients+"\n",a+="\n",a+=["Name","Number of items","Type"].toString(),a+="\n",_.each($scope.projects.selectedProject.collections,function(b,c){_.each($scope.clinicalDataCollection.collections,function(c){b._id===c._id&&(a+=c.name+","+c.items.length+","+c.type+"\n")}),_.each($scope.morphologicalDataCollection.collections,function(c){b._id===c._id&&(a+=c.name+","+c.items.length+","+c.type+"\n")})});var b=$scope.projects.selectedProject.name;return-1===$scope.projects.selectedProject.name.indexOf("csv")&&(b+=".csv"),$scope.csv.download(b,a)}).catch(console.error)},$scope.csv.download=function(a,b){var c=document.createElement("a"),d=new Blob([b],{type:"text/plain"});c.setAttribute("href",window.URL.createObjectURL(d)),c.setAttribute("download",a),c.dataset.downloadurl=["text/plain",c.download,c.href].join(":"),c.click()},$scope.clinical={data:[]},$scope.morphological={data:[]},$scope.clinical.getSelectedProjectData=function(){var a=_.map($scope.projects.selectedProject.collections,function(a){return a._id});return Promise.all(_.map(a,dcbia.getClinicalData)).then(function(a){return _.each(a,function(a){$scope.clinical.data=$scope.clinical.data.length?$scope.projects.mergeCollections($scope.clinical.data,a.data):a.data}),$scope.clinical.data})},$scope.morphological.getSelectedProjectData=function(){var a=_.map($scope.projects.selectedProject.collections,function(a){return a._id});return Promise.all(_.map(a,dcbia.getMorphologicalData)).then(function(a){return _.each(a,function(a){$scope.morphological.data=$scope.morphological.data.length?$scope.projects.mergeCollections($scope.morphological.data,a.data):a.data}),$scope.morphological.data})},$scope.clusterpost={},clusterpostService.getExecutionServers().then(function(a){$scope.clusterpost.servers=a.data,$scope.clusterpost.selectedServer=a.data[0]}),$scope.projects.getProjects().then(function(){return $scope.morphologicalDataCollection.getMorphologicalDataCollections()}).then(function(){return $scope.clinicalDataCollection.getClinicalDataCollections()})}return{restrict:"E",link:link,scope:{jobParameters:"="},templateUrl:"./src/dcbia-mfsda.template.html"}}]),angular.module("dcbia-jobs").run(["$templateCache",function(a){"use strict";a.put("./src/dcbia-mfsda.template.html",'<div ng-if="projects.section == 0">\n\t<div class="panel panel-default">\n  \t\t<div class="panel-body">  \t\t\t\n\t\t\t<div class="col-sm-6 col-md-4" ng-repeat="project in projects.projects">\n\t\t\t\t<div ng-class="projects.projectsProperties[project._id].class">\n\t\t\t\t    <div class="thumbnail">\n\t\t\t\t      <div class="caption">\n\t\t\t\t        <h3>{{project.name}}</h3>\n\t\t\t\t        <p>\n\t\t\t\t        \t<b>Number of items: </b> {{projects.getProjectItems(project)}}\n\t\t\t\t        </p>\n\t\t\t        \t<div class="btn-group">\n\t\t\t\t\t\t <button type="button" class="btn btn-default" ng-click="projects.showSection = 1;projects.select(project)">\n\t\t\t\t\t\t \t<span class="glyphicon glyphicon-eye-open"></span>\n\t\t\t\t\t\t </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="panel panel-default" style="overflow:scroll" ng-if="projects.showSection == 1">\n\t\t<div class="panel-heading">\n\t    \tSaved subsets\n\t  \t</div>\n\t  \t<div class="panel-body">\n\t  \t\t<table st-table="projects.displayedAnalyses" st-safe-src="projects.selectedProject.analyses" class="table table-striped">\n\t            <thead>\n\t                <tr>\n\t                    <th colspan="2">\n\t                        <input st-search="" placeholder="search by name" class="input-sm form-control" type="search"/>\n\t                    </th>\t                    \n\t                </tr>\n\t            </thead>\n\t            <tbody>\n\t                <tr ng-repeat="(index, analysis) in projects.displayedAnalyses">\n\t                    <td>\n\t                        {{analysis.name}}\n\t                    </td>\n\t                    <td>\n\t                        <button type="button" class="btn btn-info" ng-click="projects.showSubset(index)">\n\t                \t\t\t<span class="glyphicon glyphicon-eye-open"></span>\n\t             \t\t\t</button>\n\t                    </td>                        \n\t                </tr>\n\t            </tbody>\n\t        </table>\n\t  \t</div>\n\t</div>\n\t<div class="panel panel-default" style="overflow:scroll" ng-if="projects.showSection == 1">\n\t\t<div class="panel-heading">\n\t    \tSubset\n\t  \t</div>\t\t  \t\n\t\t<div class="panel-body">\n\t\t\t<div class="input-group">\n\t  \t\t\t<span class="input-group-addon">Name</span>\n\t  \t\t\t<input type="text" class="form-control" placeholder="Subset name" aria-describedby="basic-addon3" ng-model="projects.analysis.name">\n  \t\t\t</div>  \t\t\t\t    \n\t\t\t<table st-table="projects.analysis.selectedProjectDataDisplayed" st-safe-src="projects.analysis.selectedProjectData" class="table table-striped">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colspan="2" st-sort="{{key}}">Group</th>\n\t\t\t\t\t\t<th colspan="1" st-sort="{{key}}">Template</th>\n\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys" st-sort="{{key}}">{{key}}</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colspan="2">\n\t\t\t\t\t\t\t<div class="input-group">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-sm btn-info" ng-click="projects.setGroupProjectDataDisplayed()" >\n\t\t\t                \t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t             \t\t\t</button>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<input placeholder="Set group" class="input-sm form-control" type="number" ng-model="projects.analysis.group"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th colspan="1"></th>\n\t\t\t\t\t\t<th colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t<input st-search="{{key}}" placeholder="search by {{key}}" class="input-sm form-control" type="search" ng-if="key!=\'attachments\'" />\n\t\t\t\t\t\t\t<div class="input-group" ng-if="key==\'attachments\'">\n\t\t\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t  \t\t\t<button type="button" class="btn btn-sm btn-info" ng-click="projects.selectVisibleAttachments(true)">\n\t\t\t                \t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t             \t\t\t</button>\n\t\t\t             \t\t\t<button type="button" class="btn btn-sm btn-danger" ng-click="projects.selectVisibleAttachments(false)">\n\t\t\t                \t\t\t<span class="glyphicon glyphicon-remove"></span>\n\t\t\t             \t\t\t</button>\n\t\t\t\t\t  \t\t\t</span>\n\t\t\t\t\t\t\t\t<input placeholder="search for attachments" class="input-sm form-control" ng-model="projects.analysis.attachmentsRegex" type="search" />\n\t\t\t\t\t  \t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr ng-repeat="row in projects.analysis.selectedProjectDataDisplayed">\n\t\t\t\t\t\t<td colspan="2"><input placeholder="group" class="input-sm form-control" ng-model="row.group" type="number"/></td>\n\t\t\t\t\t\t<td colspan="1"><input type="checkbox" aria-label="..." ng-model="row.isTemplate"></td>\n\t\t\t\t\t\t<td colspan="2" ng-repeat="key in projects.analysis.selectedProjectDataKeys">\n\t\t\t\t\t\t\t<div ng-if="key == \'_attachments\'">\n\t\t\t\t\t\t\t\t<button type="button" class="btn btn-default" ng-repeat="(key, att) in row[key]" ng-click="morphologicalDataCollection.downloadAttachment(row._id, key, att)">\n\t\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-eye"></span>{{att}}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div ng-if="key == \'attachments\'">\n\t\t\t\t\t\t\t\t<div ng-repeat="(keycoll, collattachments) in row[key]">\n\t\t\t\t\t\t\t\t\t<div class="input-group" ng-repeat="(keyatt, att) in projects.getFilteredAttachments(collattachments)">\n\t\t\t\t\t\t\t\t\t\t<span class="input-group-addon">\n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" aria-label="..." ng-model="att.selected">\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<label class="form-control" >{{keyatt}}</label>\n\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div ng-if="!_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t{{row[key]}}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div ng-if="_.isArray(row[key]) && key != \'_attachments\' && key != \'attachments\'">\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li ng-repeat="item in row[key]" ng-if="key == \'owners\'">{{item.user}}</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\t\t\t\t\t\t\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t\t<div class="alert alert-warning" role="alert" ng-if="mfsda.showWarningTemplate">\n\t\t\t\tYou have selected more than 1 or no template for the MFSDA statistical analysis. <br>\t\t\t\t\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div class="row">\n\t\t\t  <div class="col-md-6">\n\t\t\t    <div class="input-group">\n\t\t\t\t\t<span class="input-group-addon" id="basic-addon1">Task name</span>\n\t\t\t\t\t<input type="text" class="form-control" placeholder="MFSDA task name" aria-describedby="basic-addon3" ng-model="mfsda.name">\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t  <div class="col-md-6">\n\t\t\t    <div class="input-group">\n\t\t\t    \t<span class="input-group-addon" id="basic-addon1">Execution server</span>\n\t\t\t    \t<select class="form-control"  ng-model="clusterpost.selectedServer" ng-options="server.name for server in clusterpost.servers"></select>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div class="row">\n\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t<div class="input-group">\n\t\t\t\t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t\t<button class="btn btn-default" type="button" ng-click="mfsda.editJobParameters=!mfsda.editJobParameters"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>\n\t\t\t\t\t\t</span>\t\t\t\t\n\t\t\t\t\t\t<input type="text" class="form-control" placeholder="Additional job parameters" aria-describedby="basic-addon3" ng-model="mfsda.jobParameters" ng-readonly="mfsda.editJobParameters">\n\t\t  \t\t\t</div>\n\t\t  \t\t</div>\n\t  \t\t</div>\n\t  \t\t<br>\n\t  \t\t<div class="row">\n\t  \t\t\t<div class="col-md-12">\n\t\t  \t\t\t<span class="input-group-btn">\n\t\t\t\t\t\t<button type="button" class="btn btn-success" ng-click="mfsda.submitJob()">\n\t\t\t\t\t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button type="button" class="btn btn-info" ng-click="mfsda.download()">\n\t\t\t\t\t\t\t<span class="glyphicon glyphicon-download"></span>\n\t\t\t\t\t\t</button>\t\t  \t\t\t\n\t\t  \t\t\t</span>\n\t\t  \t\t</div>\n\t  \t\t</div>\n\t\t</div>\n\t</div>\n</div>')}]);