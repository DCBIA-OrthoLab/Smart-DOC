var dcbiaPlots=angular.module("dcbia-plots",[]);angular.module("dcbia-plots").directive("boxPlotChart",["$compile","$rootScope",function($compile,$rootScope){return{restrict:"E",template:'<div id="{{elementId}}" style="width:100%"></div>',scope:{height:"=height",margin:"=margin",boxdata:"=data",boxPlotTitle:"=",legendY:"=",legendX:"="},link:function(scope,element,attrs){scope.elementId=_.uniqueId("chartArea");scope.refresh=function(){var child=_.find(element.children(),function(el){return el.id===scope.elementId});var min=Infinity,max=-Infinity;scope.width=child.clientWidth;var data=[];var datalabels=[];var dataurl=[];var dataemail=[];var dataimageId=[];var datauserDataId=[];var datasegname=[];var dataimageName=[];var n=0;var keys;if(scope.boxdata.data.length>0){keys=_.keys(scope.boxdata.data[0])}var ids=_.pluck(scope.boxdata.data,"_id");var queryobj=_.object(ids,scope.boxdata.data);_.each(keys,function(key){if(key!=="_id"&&key!=="_rev"){var d=_.map(_.pluck(scope.boxdata.data,key),function(v,i){var obj={key:ids[i],value:v};return obj});d=_.filter(d,function(obj){return _.isNumber(obj.value)&&!_.isNaN(obj.value)});if(d.length>0){data[n]=d;if(scope.boxdata.normalize){data=_.map(data,function(d){var max=_.max(_.pluck(d,"value"));return _.map(d,function(dd){dd.value=dd.value/max;return dd})});max=1;min=0}else{_.each(data[n],function(s){if(s.value>max)max=s.value;if(s.value<min)min=s.value})}n++}}});var chart=d3.box().whiskers(iqr(1.5)).width(scope.width).height(scope.height);chart.domain([min,max]);function iqr(k){return function(d,i){var q1=d.quartiles[0],q3=d.quartiles[2],iqr=(q3-q1)*k,i=-1,j=d.length;while(d[++i]<q1-iqr);while(d[--j]>q3+iqr);return[i,j]}}if(scope.svg!==undefined){d3.select("#"+scope.elementId).select("svg").remove()}var pad=40,left_pad=100;var w=scope.width-left_pad;var h=scope.height+scope.margin.top+scope.margin.bottom;scope.svg=d3.select(child).insert("svg").attr("id","svgImage").attr("width",w).attr("height",h).attr("class","box").append("g");var x=d3.scale.ordinal().domain(data.map(function(d,i){return i})).rangeRoundBands([0,scope.width],.7,.3);var xAxis=d3.svg.axis().scale(x).orient("bottom").tickFormat(function(d,i){return dataimageName&&dataimageName[i]&&dataimageName[i][0]?dataimageName[i][0]:datalabels[d]});var y=d3.scale.linear().domain([min,max]).range([scope.height+scope.margin.top,scope.margin.bottom]);var yAxis=d3.svg.axis().scale(y).orient("left");scope.svg.selectAll(".box").data(_.map(data,function(d){return _.pluck(d,"value")})).enter().append("g").attr("transform",function(d,i){return"translate("+(left_pad+x(i))+","+scope.margin.top+")"}).call(chart.width(x.rangeBand()));scope.svg.append("text").attr("x",scope.width/2).attr("y",scope.margin.top/2).attr("text-anchor","middle").style("font-size","18px").text(scope.boxPlotTitle);scope.svg.append("g").attr("class","axis").attr("transform","translate("+left_pad+","+h+")").call(xAxis).append("text").attr("transform","rotate(-90)").attr("x",h/2).attr("y",-left_pad).style("text-anchor","middle").style("font-size","14px").text(scope.legendY);scope.svg.append("g").attr("class","axis").attr("transform","translate("+(left_pad-pad)+", 0)").call(yAxis).append("text").style("text-anchor","middle").attr("x",w/2).attr("y",h+pad).attr("dy",".71em").style("font-size","14px").text(scope.legendX);var circledata=[];for(var i=0;i<data.length;i++){for(var j=0;j<data[i].length;j++){var circle={};circle.index=i;circle.data=data[i][j].value;circle.key=data[i][j].key;circledata.push(circle)}}scope.svg.selectAll("circle").data(circledata).enter().append("circle").attr("class","circle").attr("style","cursor: pointer;").attr("cx",function(d){return x(d.index)+x.rangeBand()/2+left_pad}).attr("cy",function(d){return y(d.data)}).attr("r",4).attr("id",function(d){d.uniqueId=_.uniqueId("svgCircle_");return d.uniqueId}).on("click",function(d,i){if(_.isFunction(scope.boxdata.circleAction)){scope.boxdata.circleAction(d.key)}}).append("svg:title").text(function(d){return queryobj[d.key].patientId+": "+d.data}).transition().duration(800)};scope.$watch("boxdata",function(){if(scope.boxdata!==undefined){scope.refresh()}})}}}]);angular.module("dcbia-plots").directive("circlePlot",["$routeParams","$location",function($routeParams,$location){function link($scope,$attrs,$filter){$scope.plotParameters={};$scope.plotParameters.threshold=.01;$scope.plotParameters.diameter=600;$scope.plotParameters.tension=.85;$scope.plotParameters.upperValue=.44;$scope.plotParameters.link1="";$scope.plotParameters.link2="";$scope.positionNodes={};$scope.positionNodes.Left={};$scope.positionNodes.Right={};$scope.positionNodes.All={};$scope.positionNodes.Left.scalePointLeft=1.9;$scope.positionNodes.Right.scalePointRight=1.9;$scope.positionNodes.All.scalePointAll=2;$scope.positionNodes.Left.offsetXLeft=95;$scope.positionNodes.Right.offsetXRight=130;$scope.positionNodes.All.offsetXAll=85;$scope.positionNodes.Left.offsetYLeft=150;$scope.positionNodes.Right.offsetYRight=150;$scope.positionNodes.All.offsetYAll=110;$scope.scaleImgBrainTemplate={};$scope.scaleImgBrainTemplate.Left=80;$scope.scaleImgBrainTemplate.All=80;$scope.scaleImgBrainTemplate.Right=80;$scope.descriptionPlotDone=false;$scope.plotID=_.uniqueId("divDiagram");$scope.brainTemplateAllClass="AllPlotTemplate"+$scope.plotID;$scope.brainTemplateLeftClass="leftPlotTemplate"+$scope.plotID;$scope.brainTemplateRightClass="rightPlotTemplate"+$scope.plotID;$scope.brainTemplateImgAll="divBrainImgALL"+$scope.plotID;$scope.brainTemplateLinkAll="divBrainLinkALL"+$scope.plotID;$scope.brainTemplateImgLeft="divBrainImgLeft"+$scope.plotID;$scope.brainTemplateLinkLeft="divBrainLinkLeft"+$scope.plotID;$scope.brainTemplateImgRight="divBrainImgRight"+$scope.plotID;$scope.brainTemplateLinkRight="divBrainLinkRight"+$scope.plotID;$scope.choice={};$scope.choice.selection="Average";$scope.plotBrainTemplate=false;$scope.plotBrainConnectivity=function(){$scope.plotView=true;var data=$scope.plotData["fdt_matrix"];console.log("MATRIX",data);var table=$scope.plotData["jsonTableDescripton"];console.log("DESCRIPTION TABLE",table);var matrix=[];var matrix_norm=[];if(angular.isString(data)){var lines=data.split("\n");for(var line=0;line<lines.length;line++){var rows=[];var values=lines[line].split("  ");for(var val=0;val<values.length;val++){if(values[val]!=""){rows.push(values[val])}}if(rows.length>0){matrix.push(rows)}}console.log(matrix);for(var line in matrix){if(matrix.length!=matrix[line].length){console.log("Error dimension matrix")}}var waytotal=[];for(var i in matrix){var sum=0;for(var j in matrix[i]){sum=sum+parseFloat(matrix[i][j])}waytotal.push(sum)}for(var i in matrix){var vals=[];for(var j in matrix[i]){vals.push(parseFloat(matrix[i][j])/waytotal[i])}matrix_norm.push(vals)}}else{matrix_norm=data}var table_Matrix=[];var listFDT=[];var listVisuOrder=[];var coordList={};var MaxvisuOrder=0;for(var i=0;i<matrix_norm.length;i++){listFDT.push({})}for(var seed in table){var matrixRow=table[seed]["MatrixRow"];if(matrixRow!="-1"){listFDT[matrixRow-1]=table[seed]["VisuHierarchy"]+table[seed]["name"];var visuorder=table[seed]["VisuOrder"];if(visuorder>MaxvisuOrder){MaxvisuOrder=visuorder}table_Matrix.push(table[seed])}else{}}for(var i=0;i<MaxvisuOrder;i++){listVisuOrder.push("")}for(var seed in table_Matrix){var visuOrder=table_Matrix[seed]["VisuOrder"];if(visuOrder!="-1"){var name=table_Matrix[seed]["VisuHierarchy"]+table_Matrix[seed]["name"];if(table_Matrix[seed]["coord"]!=undefined){var coordX=table_Matrix[seed]["coord"][0];var coordY=table_Matrix[seed]["coord"][1];var coordZ=table_Matrix[seed]["coord"][2];var seedInfo={name:name,x:coordX,y:coordY,z:coordZ}}else{var seedInfo={name:name}}listVisuOrder[visuOrder-1]=seedInfo}else{}}var NewMat=[];matrix_norm.forEach(function(line,i){var indexLine=listFDT.indexOf(listVisuOrder[i]["name"]);if(indexLine!=-1){var row=matrix_norm[indexLine];var NewRow=[];row.forEach(function(val,j){var indexRow=listFDT.indexOf(listVisuOrder[j]["name"]);if(indexRow!=-1){NewRow.push(row[indexRow])}});NewMat.push(NewRow)}});console.log("Matrix ordered");console.log(NewMat.length);var returnJSONobject={matrix:NewMat,listOrdered:listVisuOrder};return returnJSONobject};$scope.resetCoord=function(){$scope.positionNodes.Left.scalePointLeft=1.9;$scope.positionNodes.Right.scalePointRight=1.9;$scope.positionNodes.All.scalePointAll=2;$scope.positionNodes.Left.offsetXLeft=95;$scope.positionNodes.Right.offsetXRight=130;$scope.positionNodes.All.offsetXAll=85;$scope.positionNodes.Left.offsetYLeft=150;$scope.positionNodes.Right.offsetYRight=150;$scope.positionNodes.All.offsetYAll=110;$scope.scaleImgBrainTemplate.Left=80;$scope.scaleImgBrainTemplate.All=80;$scope.scaleImgBrainTemplate.Right=80};$scope.AverageMatrix=function(matrix){var MatrixProc=[];matrix.forEach(function(line,i){var row=[];line.forEach(function(val,j){if(i==j){row.push(0)}else if(j>i){var average;average=(matrix[i][j]+matrix[j][i])/2;row.push(average)}else{row.push(-1)}});MatrixProc.push(row)});return MatrixProc};$scope.MaximumMatrix=function(matrix){var MatrixProc=[];matrix.forEach(function(line,i){var row=[];line.forEach(function(val,j){if(i==j){row.push(0)}else if(j>i){var max;if(matrix[i][j]>matrix[j][i]){max=matrix[i][j]}else{max=matrix[j][i]}row.push(max)}else{row.push(-1)}});MatrixProc.push(row)});return MatrixProc};$scope.MinimumMatrix=function(matrix){var MatrixProc=[];matrix.forEach(function(line,i){var row=[];line.forEach(function(val,j){if(i==j){row.push(0)}else if(j>i){var max;if(matrix[i][j]<matrix[j][i]){max=matrix[i][j]}else{max=matrix[j][i]}row.push(max)}else{row.push(-1)}});MatrixProc.push(row)});return MatrixProc};$scope.CreateDescription=function(JSONInfo,checkbox){console.log($scope.plotData);if($scope.plotData){console.log("valueCheck"+checkbox);var matrix=JSONInfo["matrix"];var MatProcess=[];if(checkbox=="Average"){MatProcess=$scope.AverageMatrix(matrix)}else if(checkbox=="Maximum"){MatProcess=$scope.MaximumMatrix(matrix)}else{MatProcess=$scope.MinimumMatrix(matrix)}var seeds=JSONInfo["listOrdered"];var matrixDescription=[];var sizeMat=seeds.length;for(var nbseed=0;nbseed<sizeMat;nbseed++){var jsonLine={name:seeds[nbseed]["name"]};var size=[];var imports=[];for(var j=0;j<sizeMat;j++){if(j!=nbseed){if(MatProcess[nbseed][j]>"0"){size.push(parseFloat(MatProcess[nbseed][j]));imports.push(seeds[j])}}}jsonLine.size=size;jsonLine.imports=imports;matrixDescription.push(jsonLine)}$scope.descriptionPlotDone=true;return matrixDescription}};$scope.NewPlot=function(x,y,scale){if($scope.plotData){$scope.removeOldPlot();$scope.plotVisible=true;$scope.Plot()}};$scope.removeOldPlot=function(){console.log("REMOVE");var circlePlot=document.getElementById("divPlot_"+$scope.plotID);if(circlePlot!=null)circlePlot.parentNode.removeChild(circlePlot);var tooltipPlot=document.getElementById("tooltip_"+$scope.plotID);if(tooltipPlot!=null)tooltipPlot.parentNode.removeChild(tooltipPlot);var tooltipNode=document.getElementById("nodeTooltip_"+$scope.plotID);if(tooltipNode!=null)tooltipNode.parentNode.removeChild(tooltipNode);var allImg=document.getElementById($scope.brainTemplateImgAll);if(allImg!=null)allImg.parentNode.removeChild(allImg);var allLink=document.getElementById($scope.brainTemplateLinkAll);if(allLink!=null)allLink.parentNode.removeChild(allLink);var rightImg=document.getElementById($scope.brainTemplateImgRight);if(rightImg!=null)rightImg.parentNode.removeChild(rightImg);var rightLink=document.getElementById($scope.brainTemplateLinkRight);if(rightLink!=null)rightLink.parentNode.removeChild(rightLink);var leftImg=document.getElementById($scope.brainTemplateImgLeft);if(leftImg!=null)leftImg.parentNode.removeChild(leftImg);var leftLink=document.getElementById($scope.brainTemplateLinkLeft);if(leftLink!=null)leftLink.parentNode.removeChild(leftLink)};$scope.Plot=function(){var jsonOject=$scope.plotBrainConnectivity();$scope.removeOldPlot();var method=$scope.choice.selection;console.log(method+" method");var classes=$scope.CreateDescription(jsonOject,method);if($scope.descriptionPlotDone==true){var thresholdDefaultValue=$scope.plotParameters.threshold;var diameter=$scope.plotParameters.diameter;var tensionSplines=$scope.plotParameters.tension;var upperValue=$scope.plotParameters.upperValue;if(upperValue!=0){if(upperValue<=thresholdDefaultValue)alert("The maximum upper value should be superior to the threshold value")}$scope.plotVisible=true;var radius=diameter/2,innerRadius=radius-120;var cluster=d3.layout.cluster().size([360,innerRadius]).sort(null).value(function(d){return d.size});var bundle=d3.layout.bundle();var line=d3.svg.line.radial().interpolate("bundle").tension(tensionSplines).radius(function(d){return d.y}).angle(function(d){return d.x/180*Math.PI});var div=d3.select("#"+$scope.plotID).append("div").attr("class","tooltip").attr("id","tooltip_"+$scope.plotID).style("opacity",0);var margin={top:30,right:10,bottom:15,left:50},width=100-margin.right-margin.left,height=diameter;var intDiameter=parseInt(diameter)+50;var diamMargin=intDiameter+100;var bottom=margin.bottom;var newHeight=intDiameter+bottom;var divPlot=d3.select("#"+$scope.plotID).append("div").attr("width",diamMargin).attr("height",newHeight).attr("class","divPlot").attr("id","divPlot_"+$scope.plotID);var splines=[];var svg=divPlot.append("svg").attr("width",intDiameter).attr("height",newHeight).attr("class","circlePlot").attr("id","circlePlot").append("g").attr("transform","translate("+radius+","+radius+")");var y=d3.scale.linear().range([height/2,0]).domain([thresholdDefaultValue,upperValue]);var svgColorbar=divPlot.append("svg").attr("width",100).attr("height",newHeight+10).attr("id","colorBar").attr("class","colorBar").append("g").attr("transform","translate("+margin.left+","+newHeight/4+")");var gradient=svgColorbar.append("defs").append("linearGradient").attr("id","gradient"+$scope.plotID).attr("x1","0%").attr("y1","100%").attr("x2","0%").attr("y2","0%").attr("spreadMethod","pad");gradient.append("stop").attr("offset","0%").attr("stop-color",d3.hsl(240,1,.5)).attr("stop-opacity",1);gradient.append("stop").attr("offset","25%").attr("stop-color",d3.hsl(180,1,.5)).attr("stop-opacity",1);gradient.append("stop").attr("offset","50%").attr("stop-color",d3.hsl(120,1,.5)).attr("stop-opacity",1);gradient.append("stop").attr("offset","75%").attr("stop-color",d3.hsl(60,1,.5)).attr("stop-opacity",1);gradient.append("stop").attr("offset","100%").attr("stop-color",d3.hsl(0,1,.5)).attr("stop-opacity",1);var gradUrl="gradient"+$scope.plotID;svgColorbar.append("rect").attr("class","grid-background").attr("width",width/1.5).attr("height",height/2).style("fill","url(#gradient"+$scope.plotID+")");svgColorbar.append("g").attr("class","axis").call(d3.svg.axis().scale(y).orient("left").ticks(10));var nodes=cluster.nodes($scope.packageHierarchy(classes));var links=$scope.packageImports(nodes,thresholdDefaultValue);splines=bundle(links);var size=$scope.sizeMap(nodes,thresholdDefaultValue);var sizeOfLinksRatio=diameter/35;var MinMax=upperValue-thresholdDefaultValue;var valLink1=$scope.plotParameters.link1;var valLink2=$scope.plotParameters.link2;var path=svg.selectAll(".link").data(splines).enter().append("path").attr("class","link").attr("stroke-width",function(d,i){return size[i]*sizeOfLinksRatio+MinMax+"px"}).attr("stroke",function(d,i){if(size[i]>=upperValue){return $scope.colorHSV("max",0,1)}else{return $scope.colorHSV(size[i],thresholdDefaultValue,upperValue)}}).attr("d",line).on("mouseover",function(d,i){var sized=d.length;valLink1=d[0].key+$scope.plotID;valLink2=d[sized-1].key+$scope.plotID;var Text1=document.getElementById(valLink1);var Text2=document.getElementById(valLink2);Text1.setAttribute("font-weight","bold");Text2.setAttribute("font-weight","bold");Text1.setAttribute("font-size","13px");Text2.setAttribute("font-size","13px");div.transition().duration(200).style("opacity",.9);div.html("Connectivity value : "+size[i].toFixed(5)).style("left",d3.event.pageX+"px").style("top",d3.event.pageY+28+"px")}).on("mouseout",function(d){var sized=d.length;valLink1=d[0].key+$scope.plotID;valLink2=d[sized-1].key+$scope.plotID;var Text1=document.getElementById(valLink1);var Text2=document.getElementById(valLink2);Text1.setAttribute("font-weight","normal");Text2.setAttribute("font-weight","normal");Text1.setAttribute("font-size","11px");Text2.setAttribute("font-size","11px");div.transition().duration(500).style("opacity",0)});svg.selectAll(".node").data(nodes.filter(function(n){return!n.children})).enter().append("g").attr("class","node").attr("transform",function(d){return"rotate("+(d.x-90)+")translate("+d.y+")"}).append("text").attr("id",function(d){return d.key+$scope.plotID}).attr("dx",function(d){return d.x<180?8:-8}).attr("dy",".31em").attr("text-anchor",function(d){return d.x<180?"start":"end"}).attr("transform",function(d){return d.x<180?null:"rotate(180)"}).text(function(d){return d.key}).attr("font-weight",function(d){if(d.key==valLink2){return"bold"}else{return"normal"}});d3.select(self.frameElement).style("height",diameter+"px");if(jsonOject.listOrdered[1].x!=undefined){$scope.plotBrainTemplate=true;var divBrainImgALL=d3.select("."+$scope.brainTemplateAllClass).append("div").attr("class","divBrainImgALL").attr("id",$scope.brainTemplateImgAll);var divBrainLinkALL=d3.select("."+$scope.brainTemplateAllClass).append("div").attr("class","divBrainLinkALL").attr("id",$scope.brainTemplateLinkAll);var svgBrain=divBrainLinkALL.append("svg").attr("id","linksTemplate").attr("width",350).attr("height",420);var scaleImgAll=$scope.scaleImgBrainTemplate.All+"%";console.log("scaleImgAll",scaleImgAll);var imgBrain=divBrainImgALL.append("img").attr("src","data/rsz_brainall.png").attr("class","bgimgAll").attr("id","bgimgAll").attr("width",scaleImgAll);var gradientCircle=svgBrain.append("defs").append("radialGradient").attr("id","blueCircle"+$scope.plotID).attr("gradientUnits","objectBoundingBox").attr("fx","30%").attr("fy","30%");gradientCircle.append("stop").attr("offset","0%").attr("stop-color","#FFFFFF");gradientCircle.append("stop").attr("offset","40%").attr("stop-color","#AA0000");gradientCircle.append("stop").attr("offset","100%").attr("stop-color","#660000");var nodeTooltip=d3.select("#"+$scope.plotID).append("div").attr("class","nodeTooltip").attr("id","nodeTooltip_"+$scope.plotID).style("opacity",0);var CoordDescription=jsonOject["listOrdered"];var linefunction=d3.svg.line().interpolate("bundle").tension(tensionSplines).x(function(d){return d.x}).y(function(d){return d.y});splines.forEach(function(d,n){var sized=d.length;var seedName=d[0].key;var targetName=d[sized-1].key;var x1,x2,y1,y2;CoordDescription.forEach(function(c,i){var last=c["name"].lastIndexOf(".");var KeyName=c["name"].substring(last+1);if(KeyName==seedName){x1=c["x"]+parseFloat($scope.positionNodes.All.offsetXAll);x1=x1*parseFloat($scope.positionNodes.All.scalePointAll);y1=-c["y"];y1=y1+parseFloat($scope.positionNodes.All.offsetYAll);y1=y1*parseFloat($scope.positionNodes.All.scalePointAll)}else if(KeyName==targetName){x2=c["x"]+parseFloat($scope.positionNodes.All.offsetXAll);x2=x2*parseFloat($scope.positionNodes.All.scalePointAll);y2=-c["y"];y2=y2+parseFloat($scope.positionNodes.All.offsetYAll);y2=y2*parseFloat($scope.positionNodes.All.scalePointAll)}});var line=[{x:x1,y:y1},{x:x2,y:y2}];var linkRatioBrain=10;var linegraph=svgBrain.append("path").attr("d",linefunction(line)).attr("stroke",function(){if(size[n]>=upperValue){return $scope.colorHSV("max",0,1)}else{return $scope.colorHSV(size[n],thresholdDefaultValue,upperValue)}}).attr("stroke-width",function(){return size[n]*linkRatioBrain+"px"}).attr("fill","none")});CoordDescription.forEach(function(d,i){var coordX=d["x"]+parseFloat($scope.positionNodes.All.offsetXAll);var coordY=-d["y"];coordY=coordY+parseFloat($scope.positionNodes.All.offsetYAll);svgBrain.append("circle").attr("cx",coordX*parseFloat($scope.positionNodes.All.scalePointAll)).attr("cy",coordY*parseFloat($scope.positionNodes.All.scalePointAll)).attr("r",4).style("fill","url(#blueCircle"+$scope.plotID+")").on("mouseover",function(e,i){nodeTooltip.transition().duration(200).style("opacity",.9);var last=d["name"].lastIndexOf(".");var KeyName=d["name"].substring(last+1);nodeTooltip.html("Seed : "+KeyName).style("left",d3.event.pageX+"px").style("top",d3.event.pageY+"px")}).on("mouseout",function(d){nodeTooltip.transition().duration(500).style("opacity",0)})});var divBrainImgLeft=d3.select("."+$scope.brainTemplateLeftClass).append("div").attr("class","divBrainImgLeft").attr("id",$scope.brainTemplateImgLeft);var divBrainLinkLeft=d3.select("."+$scope.brainTemplateLeftClass).append("div").attr("class","divBrainLinkLeft").attr("id",$scope.brainTemplateLinkLeft);var svgBrainLeft=divBrainLinkLeft.append("svg").attr("id","linksTemplate").attr("width",410).attr("height",400);var scaleImgLeft=$scope.scaleImgBrainTemplate.Left+"%";var imgBrainLeft=divBrainImgLeft.append("img").attr("src","data/rsz_brainleft.jpg").attr("class","bgimgLeft").attr("id","bgimgLeft").attr("width",scaleImgLeft);splines.forEach(function(d,n){var sized=d.length;var seedName=d[0].key;var targetName=d[sized-1].key;var y1=0;var y2=0;var z1=0;var z2=0;var last1=seedName.lastIndexOf("_");var End1=seedName.substring(last1+1);var last2=targetName.lastIndexOf("_");var End2=targetName.substring(last2+1);if(End1=="L"&&End2=="L"){CoordDescription.forEach(function(c,i){var last=c["name"].lastIndexOf(".");var KeyName=c["name"].substring(last+1);if(KeyName==seedName){y1=parseFloat(-c["y"])+parseFloat($scope.positionNodes.Left.offsetXLeft);y1=y1*parseFloat($scope.positionNodes.Left.scalePointLeft);z1=parseFloat(-c["z"])+parseFloat($scope.positionNodes.Left.offsetYLeft);z1=z1*parseFloat($scope.positionNodes.Left.scalePointLeft)}else if(KeyName==targetName){y2=parseFloat(-c["y"]);y2=y2+parseFloat($scope.positionNodes.Left.offsetXLeft);y2=y2*parseFloat($scope.positionNodes.Left.scalePointLeft);z2=parseFloat(-c["z"]);z2=z2+parseFloat($scope.positionNodes.Left.offsetYLeft);z2=z2*parseFloat($scope.positionNodes.Left.scalePointLeft)}});var line=[{x:y1,y:z1},{x:y2,y:z2}];var linkRatioBrain=10;var linegraph=svgBrainLeft.append("path").attr("d",linefunction(line)).attr("stroke",function(){if(size[n]>=upperValue){return $scope.colorHSV("max",0,1)}else{return $scope.colorHSV(size[n],thresholdDefaultValue,upperValue)}}).attr("stroke-width",function(){return size[n]*linkRatioBrain+"px"}).attr("fill","none")}});CoordDescription.forEach(function(d,i){var name=d["name"];var last=d["name"].lastIndexOf("_");var side=d["name"].substring(last+1);if(side=="L"){var coordY=parseFloat(-d["y"]);var coordY=coordY+parseFloat($scope.positionNodes.Left.offsetXLeft);var coordZ=parseFloat(-d["z"]);coordZ=coordZ+parseFloat($scope.positionNodes.Left.offsetYLeft);var coordXScale=coordY*parseFloat($scope.positionNodes.Left.scalePointLeft);var coordYScale=coordZ*parseFloat($scope.positionNodes.Left.scalePointLeft);svgBrainLeft.append("circle").attr("cx",coordXScale).attr("cy",coordYScale).attr("r",4).style("fill","url(#blueCircle"+$scope.plotID+")").on("mouseover",function(e,i){nodeTooltip.transition().duration(200).style("opacity",.9);var last=d["name"].lastIndexOf(".");var KeyName=d["name"].substring(last+1);nodeTooltip.html("Seed : "+KeyName).style("left",d3.event.pageX+"px").style("top",d3.event.pageY+"px")}).on("mouseout",function(d){nodeTooltip.transition().duration(500).style("opacity",0)})}});var divBrainImgRight=d3.select("."+$scope.brainTemplateRightClass).append("div").attr("class","divBrainImgRight").attr("id",$scope.brainTemplateImgRight);var divBrainLinkRight=d3.select("."+$scope.brainTemplateRightClass).append("div").attr("class","divBrainLinkRight").attr("id",$scope.brainTemplateLinkRight);var svgBrainRight=divBrainLinkRight.append("svg").attr("id","linksTemplate").attr("width",410).attr("height",400);var scaleImgRight=$scope.scaleImgBrainTemplate.Right+"%";var imgBrainRight=divBrainImgRight.append("img").attr("src","data/rsz_brainright.jpg").attr("class","bgimgRight").attr("id","bgimgRight").attr("width",scaleImgRight);splines.forEach(function(d,n){var sized=d.length;var seedName=d[0].key;var targetName=d[sized-1].key;var y1,y2,z1,z2;var last1=seedName.lastIndexOf("_");var End1=seedName.substring(last1+1);var last2=targetName.lastIndexOf("_");var End2=targetName.substring(last2+1);if(End1=="R"&&End2=="R"){CoordDescription.forEach(function(c,i){var last=c["name"].lastIndexOf(".");var KeyName=c["name"].substring(last+1);if(KeyName==seedName){y1=c["y"];y1=y1+parseFloat($scope.positionNodes.Right.offsetXRight);y1=y1*parseFloat($scope.positionNodes.Right.scalePointRight);z1=-c["z"];z1=z1+parseFloat($scope.positionNodes.Right.offsetYRight);z1=z1*parseFloat($scope.positionNodes.Right.scalePointRight)}else if(KeyName==targetName){y2=c["y"];y2=y2+parseFloat($scope.positionNodes.Right.offsetXRight);y2=y2*parseFloat($scope.positionNodes.Right.scalePointRight);z2=-c["z"];z2=z2+parseFloat($scope.positionNodes.Right.offsetYRight);z2=z2*parseFloat($scope.positionNodes.Right.scalePointRight)}});var line=[{x:y1,y:z1},{x:y2,y:z2}];var linkRatioBrain=10;var linegraph=svgBrainRight.append("path").attr("d",linefunction(line)).on().attr("stroke",function(){if(size[n]>=upperValue){return $scope.colorHSV("max",0,1)}else{return $scope.colorHSV(size[n],thresholdDefaultValue,upperValue)}}).attr("stroke-width",function(){return size[n]*linkRatioBrain+"px"}).attr("fill","none")}});CoordDescription.forEach(function(d,i){var name=d["name"];var last=d["name"].lastIndexOf("_");var side=d["name"].substring(last+1);if(side=="R"){var coordY=d["y"];var coordY=coordY+parseFloat($scope.positionNodes.Right.offsetXRight);var coordZ=-d["z"];coordZ=coordZ+parseFloat($scope.positionNodes.Right.offsetYRight);svgBrainRight.append("circle").attr("cx",coordY*parseFloat($scope.positionNodes.Right.scalePointRight)).attr("cy",coordZ*parseFloat($scope.positionNodes.Right.scalePointRight)).attr("r",4).style("fill","url(#blueCircle"+$scope.plotID+")").on("mouseover",function(e,i){nodeTooltip.transition().duration(200).style("opacity",.9);var last=d["name"].lastIndexOf(".");var KeyName=d["name"].substring(last+1);nodeTooltip.html("Seed : "+KeyName).style("left",d3.event.pageX+"px").style("top",d3.event.pageY+"px")}).on("mouseout",function(d){nodeTooltip.transition().duration(500).style("opacity",0)})}})}else{$scope.plotBrainTemplate=false}}};$scope.colorHSV=function(size,Min,Max){if(size=="max"){var color=d3.hsl(0,1,.5)}else{var range=Max-Min;var temp=size-Min;var alpha=temp/range;var hue=240*alpha;var color=d3.hsl(240-hue,1,.5)}return color};$scope.sizeMap=function(nodes,threshold){var size=[];nodes.forEach(function(d){if(d.size){d.size.forEach(function(i){if(i>threshold)size.push(i)})}});return size};$scope.packageHierarchy=function(classes){var map={};function find(name,data){var node=map[name],i;if(!node){node=map[name]=data||{name:name,children:[]};if(name.length){node.parent=find(name.substring(0,i=name.lastIndexOf(".")));node.parent.children.push(node);node.key=name.substring(i+1)}}return node}classes.forEach(function(d){find(d.name,d)});return map[""]};$scope.packageImports=function(nodes,threshold){var map={},imports=[];nodes.forEach(function(d){map[d.name]=d});nodes.forEach(function(d){if(d.imports)d.imports.forEach(function(i,r){if(d.size[r]>threshold){imports.push({source:map[d.name],target:map[i["name"]]})}})});return imports};$scope.$watch("scaleImgBrainTemplate.All",function(){console.log("HelloWatch scale all brain template",$scope.scaleImgBrainTemplate.All);$scope.NewPlot()});$scope.$watch("scaleImgBrainTemplate.Left",function(){console.log("HelloWatch scale left brain template",$scope.scaleImgBrainTemplate.Left);$scope.NewPlot()});$scope.$watch("scaleImgBrainTemplate.Right",function(){console.log("HelloWatch scale right brain template",$scope.scaleImgBrainTemplate.Right);$scope.NewPlot()});$scope.$watch("positionNodes.Left.scalePointLeft",function(){console.log("HelloWatch scaleLeft",$scope.positionNodes.Left.scalePointLeft);$scope.NewPlot()});$scope.$watch("positionNodes.Left.offsetXLeft",function(){console.log("HelloWatch offsetXLeft",$scope.positionNodes.Left.offsetXLeft);$scope.NewPlot()});$scope.$watch("positionNodes.Left.offsetYLeft",function(){console.log("HelloWatch offsetYLeft",$scope.positionNodes.Left.offsetYLeft);$scope.NewPlot()});$scope.$watch("positionNodes.All.scalePointAll",function(){console.log("HelloWatch scaleAll",$scope.positionNodes.All.scalePointAll);$scope.NewPlot()});$scope.$watch("positionNodes.All.offsetXAll",function(){console.log("HelloWatch offsetXAll",$scope.positionNodes.All.offsetXAll);$scope.NewPlot()});$scope.$watch("positionNodes.All.offsetYAll",function(){console.log("HelloWatch offsetYAll",$scope.positionNodes.All.offsetYAll);$scope.NewPlot()});$scope.$watch("positionNodes.Right.scalePointRight",function(){console.log("HelloWatch scaleRight",$scope.positionNodes.Right.scalePointRight);$scope.NewPlot()});$scope.$watch("positionNodes.Right.offsetXRight",function(){console.log("HelloWatch offsetXRight",$scope.positionNodes.Right.offsetXRight);$scope.NewPlot()});$scope.$watch("positionNodes.Right.offsetYRight",function(){console.log("HelloWatch offsetYRight",$scope.positionNodes.Right.offsetYRight);$scope.NewPlot()});$scope.$watch("plotParameters.link1",function(){console.log("HelloWatch link1",$scope.plotParameters.link1);$scope.NewPlot()});$scope.$watch("plotParameters.link2",function(){console.log("HelloWatch link2",$scope.plotParameters.link2);$scope.NewPlot()});$scope.$watch("plotParameters.threshold",function(){console.log("HelloWatch thres",$scope.plotParameters.threshold);$scope.NewPlot()});$scope.$watch("plotParameters.diameter",function(){console.log("HelloWatch diam",$scope.plotParameters.diameter);$scope.NewPlot()});$scope.$watch("plotParameters.tension",function(){console.log("HelloWatch tension",$scope.plotParameters.tension);$scope.NewPlot()});$scope.$watch("plotParameters.upperValue",function(){console.log("HelloWatch upper",$scope.plotParameters.upperValue);$scope.NewPlot()});$scope.$watch("choice.selection",function(){console.log("HelloWatch choiceSelection",$scope.choice.selection);$scope.NewPlot()});$scope.$watch("plotData",function(){if($scope.plotData){$scope.plotParameters.plotData=$scope.plotData;$scope.Plot()}})}return{restrict:"E",scope:{plotData:"="},link:link,templateUrl:"./src/circlePlot.template.html"}}]);angular.module("dcbia-plots").directive("d3Plots",["$routeParams","$location","$rootScope","clusterauth","dcbia",function($routeParams,$location,$rootScope,clusterauth,dcbia){function link($scope,element){$scope.elementId=_.uniqueId("d3Plots");element.attr("id",$scope.elementId);$scope.graph={axis:{}};$scope.boxplotdata={};$scope.height=600;$scope.margin={left:80,right:80,top:40,bottom:40};$scope.update=function(){};$scope.$watch("data",function(){if($scope.data){$scope.update()}});$scope.$watch("graph.axis.x",function(){var data=$scope.data;if($scope.svg!=undefined){if($scope.graph.type==0)if(element.children()[2]!=undefined)element.children()[2].remove()}if($scope.graph.axis.x!=undefined){if($scope.graph.axis.y!=undefined){displayTwoCaracteristics(data,$scope.graph.axis.x,$scope.graph.axis.y)}}});$scope.$watch("graph.axis.y",function(){var data=$scope.data;if($scope.svg!=undefined){if($scope.graph.type==0)if(element.children()[2]!=undefined)element.children()[2].remove()}if($scope.graph.axis.x!=undefined){if($scope.graph.axis.y!=undefined){displayTwoCaracteristics(data,$scope.graph.axis.x,$scope.graph.axis.y)}}});$scope.$watch("graph.type",function(){var data=$scope.data;var allkeys={};_.each(data,function(obj){_.extend(allkeys,obj)});delete allkeys._id;delete allkeys._rev;delete allkeys.type;$scope.keys=_.map(_.keys(allkeys),function(v,i){return{id:i,label:v}});if($scope.svg!=undefined){if($scope.graph.type==0)if(element.children()[2]!=undefined)element.children()[2].remove();if($scope.graph.type==1)if(element.children()[1]!=undefined)element.children()[1].remove()}
if($scope.graph.type==0){if($scope.graph.axis.x!=undefined){if($scope.graph.axis.y!=undefined){displayTwoCaracteristics(data,$scope.graph.axis.x.label,$scope.graph.axis.y.label)}}}else{$scope.displayAllCaracteristics(data)}});function displayTwoCaracteristics(data,carac1,carac2){if(!data){return}$scope.compareTwoVariables={};$scope.compareTwoVariables.data=data;$scope.compareTwoVariables.carac1=carac1;$scope.compareTwoVariables.carac2=carac2}$scope.circleAction=function(key){var data=_.find($scope.boxplotdata.data,function(d){return d._id===key})};$scope.getMorphologicalDataByPatientId=function(pid){dcbia.getMorphologicalDataByPatientId(pid).then(function(res){$scope.attachments={};$scope.attachments.data=_.flatten(_.map(res.data,function(morphodata){return _.map(morphodata._attachments,function(att,key){return{id:morphodata._id,label:key}})}))})};$scope.displayAllCaracteristics=function(data){if(!data){return}$scope.boxplotdata={};$scope.boxplotdata.data=data;$scope.boxplotdata.normalize=$scope.graph.normalize;$scope.boxplotdata.circleAction=$scope.circleAction};$scope.$watch("graph.normalize",function(){$scope.displayAllCaracteristics($scope.data)});$scope.$watch("attachments.selected",function(){if($scope.attachments&&$scope.attachments.selected){dcbia.getAttachement($scope.attachments.selected.id,$scope.attachments.selected.label,"arraybuffer").then(function(res){$scope.attachments.surface=res.data})}});$scope.multiSeries={subjects:{},selectedVariables:{}};$scope.multiSeries.addSubjects=function(data){if($scope.multiSeries.subjects===undefined){$scope.multiSeries.subjects={}}_.each(data,function(d){$scope.multiSeries.subjects[d._id]=true})};$scope.multiSeries.addVariables=function(variables){_.each(variables,function(v){$scope.multiSeries.selectedVariables[v.label]=true})};$scope.multiSeries.update=function(){var selectedVariables=_.compact(_.map($scope.multiSeries.selectedVariables,function(b,v){if(b){return v}}));var data=_.map(selectedVariables,function(v){var obj={};_.each($scope.multiSeries.subjects,function(b,key){if(b){var d=_.find($scope.data,function(d){return key===d._id});obj[d.patientId]=d[v]}});return obj});$scope.multiSeries.data={};$scope.multiSeries.data.lines=_.compact(data);$scope.multiSeries.data.labels=selectedVariables;$scope.multiSeries.data.action=$scope.getMorphologicalDataByPatientId}}return{restrict:"E",link:link,scope:{data:"="},templateUrl:"./src/d3Plots.template.html"}}]);angular.module("dcbia-plots").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("./src/boxPlot.template.html","<div ng-include src=\"'views/partials/navbar.html'\"></div>\n"+'<div ng-controller="boxPlotController" class="row">\n'+"\t<h2>BoxPlot chart</h2>\n"+"\n"+'    <box-plot-chart height="options.height" width="options.width" data="data" margin="options.margin"></box-plot-chart>\n'+"</div>");$templateCache.put("./src/circlePlot.template.html",'<div class="buttons" ng-if="plotVisible">\n'+"\n"+'<div class="checkgroup" >\n'+'\t<p class="matProc"> Matrix processing : </p>\n'+"\n"+'  <ng-form name="myForm">\n'+'    <label for="average" class="methodChoice"> \n'+'     <input type="radio" ng-model="choice.selection" value="Average" id="average"> Average  </label>\n'+'     <label for="maximum"  class="methodChoice"> \n'+'      <input type="radio" ng-model="choice.selection" value="Maximum" id="maximum"> Maximum </label>\n'+'      <label for="minimum"  class="methodChoice">  \n'+'       <input type="radio" ng-model="choice.selection" value="Minimum" id="minimum"> Minimum </label>\n'+"\n"+"\n"+'  <p ng-if="plotVisible"> <div class="text" ng-if="plotVisible"> Maximum upper value : </div>\n'+'<input type="text" pattern="[0-9]+([,\\.][0-9]+)?" value="1"\n'+' ng-model="plotParameters.upperValue" ng-change="NewPlot" class="upperValue" ng-if="plotVisible" /> \n'+"\n"+' <div class="text" id="textMargin" ng-if="plotVisible"> Threshold value :  </div>\n'+'<input type="text" pattern="[0-9]+([,\\.][0-9]+)?" value="0"\n'+' ng-model="plotParameters.threshold" ng-change="NewPlot" class="ValueThreshold" ng-if="plotVisible" /> </p>\n'+" \n"+"  </div>\n"+"\n"+'<div class="slides">\n'+'<p ng-if="plotVisible"> Tension splines value : </p>\n'+'<input type="range" class="tensionBar" id="tensionBar" min="0" max="1" step="0.05" value="0.85" ng-if="plotVisible" ng-model="plotParameters.tension" ng-change="NewPlot"/> \n'+"</div>\n"+"\n"+'<div class="slides">\n'+'<p ng-if="plotVisible"> Diameter of circle : </p>\n'+'<input type="range" class="diameterBar" id="diameterBar" min="300" max="1000" value="960" step="10" ng-if="plotVisible" ng-model="plotParameters.diameter" ng-change="NewPlot"/> \n'+"</div>\n"+"\n"+"</div>\n"+"\n"+'<div id="{{plotID}}"> \n'+"\n"+"</div>\n"+"\n"+'<div class="brainTemplatePlot" id="brainTemplatePlot" ng-show="plotBrainTemplate">\n'+"\n"+'<h6 class="visuCheckbox"> Visualisation brain template connectivity : <input type="checkbox" name="showBrainTemplate" value="showBrainTemplate" ng-model="showBrainTemplate" ng-init="showBrainTemplate=false" />  </h6>\n'+"\n"+'<div class="brainTemplate" ng-show="showBrainTemplate" ng-model="showBrainTemplate" ng-change="plotBrainTemplate">\n'+"\n"+'<div class="divBrainLeft" id="divBrainLeft">\n'+'\t<div class="{{brainTemplateLeftClass}}" id="{{brainTemplateLeftClass}}"> \n'+"\t</div>\n"+'\t<div class=modifCoord ng-if="modifCoordPosition">\n'+"<div class=modifCoordTitles> Scale and location of nodes : <br/> </div>\n"+' \tScale : <input type="range" min="0.01" max="5" step=0.1 ng-model="positionNodes.Left.scalePointLeft" ng-change="NewPlot">\n'+"\n"+'\tX-offset : <input type="range" min="-100" max="700" step=0.1 ng-model="positionNodes.Left.offsetXLeft" ng-change="NewPlot">\n'+"\n"+"\n"+'\tY-offset : <input type="range" min="-100" max="700" step=0.1 ng-model="positionNodes.Left.offsetYLeft" ng-change="NewPlot">\n'+"\t<div class=modifCoordTitles> Resize brain template : <br/> </div>\n"+'\t<input type="range" min="30" max="100" step=1 ng-model="scaleImgBrainTemplate.Left" ng-change="NewPlot">\n'+"</div>\n"+"\t</div>\n"+"\n"+"\n"+'<div class="divBrainALL" id="divBrainALL" >\n'+'\t<div class="{{brainTemplateAllClass}}" id="{{brainTemplateAllClass}}"> \n'+"\t</div>\n"+'\t<div class=modifCoord ng-if="modifCoordPosition">\n'+"<div class=modifCoordTitles> Scale and location of nodes : <br/> </div>\n"+'\tScale : <input type="range" min="0.01" max="5" step=0.1 ng-model="positionNodes.All.scalePointAll" ng-change="NewPlot">\n'+"\n"+'\tX-offset : <input type="range" min="-100" max="500" step=0.1 ng-model="positionNodes.All.offsetXAll" ng-change="NewPlot">\n'+"\n"+"\n"+'\tY-offset : <input type="range" min="-100" max="700" step=0.1 ng-model="positionNodes.All.offsetYAll" ng-change="NewPlot">\n'+"\t<div class=modifCoordTitles> Resize brain template : <br/> </div>\n"+'\t<input type="range" min="30" max="100" step=1 ng-model="scaleImgBrainTemplate.All" ng-change="NewPlot">\n'+"</div>\n"+"</div>\n"+"\n"+'<div class="divBrainRight" id="divBrainRight" >\n'+'\t<div class="{{brainTemplateRightClass}}" id="{{brainTemplateRightClass}}"> \n'+"\t</div>\n"+'\t<div class=modifCoord ng-if="modifCoordPosition">\n'+"<div class=modifCoordTitles> Scale and location of nodes : <br/> </div>\n"+'\tScale : <input type="range" min="0.01" max="5" step=0.1 ng-model="positionNodes.Right.scalePointRight" ng-change="NewPlot">\n'+"\n"+'\tX-offset : <input type="range" min="-100" max="500" step=0.1 ng-model="positionNodes.Right.offsetXRight" ng-change="NewPlot">\n'+"\n"+"\n"+'\tY-offset : <input type="range" min="-100" max="500" step=0.1 ng-model="positionNodes.Right.offsetYRight" ng-change="NewPlot">\n'+"\t<div class=modifCoordTitles> Resize brain template : <br/> </div>\n"+'\t<input type="range" min="30" max="100" step=1 ng-model="scaleImgBrainTemplate.Right" ng-change="NewPlot">\n'+"</div>\n"+"\t</div>\n"+'\t<h6 class="changePositonCheckbox">  Change nodes and links position or/and scale : \n'+'<input type="checkbox" name="modifCoordPosition" value="modifCoordPosition" ng-model="modifCoordPosition" ng-init="modifCoordPosition=false" /></h6>\n'+'<button type="button" ng-click=resetCoord() class="resetCoordPos" ng-show="modifCoordPosition"> Reset position nodes and links </button>\n'+"</div>\n"+"\n"+"</div>\n"+"\n"+"\n");$templateCache.put("./src/d3Plots.template.html","\n"+'<div class="panel panel-info">\n'+'    <div class="btn-group">\n'+'         <button type="button" class="btn btn-default" ng-click="graph.type = 0">\n'+'            <span class="glyphicon glyphicon-stats"></span>\n'+"            Compare\n"+"         </button>\n"+"\n"+'         <button type="button" class="btn btn-default" ng-click="graph.type = 2">\n'+'            <span class="glyphicon glyphicon-stats"></span>\n'+"            Line series\n"+"         </button>\n"+"    </div>\n"+"</div>\n"+"\n"+'<div class="panel panel-default" ng-if = "graph.type == 0">\n'+'    <div class="input-group">\n'+'        <select class="form-control" ng-options="item as item.label for item in keys" ng-model="graph.axis.x"></select>\n'+'        <select class="form-control" ng-options="item as item.label for item in keys" ng-model="graph.axis.y"></select>\n'+"    </div>\n"+"\n"+'    <compare-two-variables data="compareTwoVariables" margin="margin" height="height" >\n'+"\n"+"    </compare-two-variables>\n"+"</div>\n"+"\n"+'<div class="panel panel-default" ng-if = "graph.type == 1">\n'+"\n"+"\n"+'    <div class="input-group">\n'+'        <span class="input-group-addon">\n'+'            <input type="checkbox" aria-label="..." ng-model="graph.normalize">\n'+"        </span>\n"+'        <label class="form-control" > Normalize</label>\n'+"    </div>\n"+"\n"+"    <box-plot-chart \n"+'      data="boxplotdata"\n'+'      height="height"\n'+'      margin="margin"\n'+'      legend-y="legendYBP"\n'+'      legend-x="legendXBP"\n'+'      box-plot-title="titleBP"\n'+'      style="margin: 20px; margin-bottom:50px;"\n'+"    ></box-plot-chart>\n"+"\n"+'    <select class="form-control" ng-options="item as item.label for item in attachments.data" ng-model="attachments.selected"></select>\n'+'    <directive-threejs data="attachments.surface" height="height" ng-if="attachments.surface"></directive-threejs>\n'+"    \n"+"</div>\n"+'<div class="panel panel-info" ng-if = "graph.type == 2">\n'+"\n"+"    \n"+'    <div class="col-md-12">\n'+'        <div class="col-md-6">\n'+'            <div class="btn-group">\n'+'                 <button type="button" class="btn btn-default" ng-click="multiSeries.addVariables(multiSeries.displayedKeys)">\n'+'                    <span class="glyphicon glyphicon-plus"></span>\n'+"                    Add\n"+"                 </button>\n"+"\n"+'                 <button type="button" class="btn btn-default" ng-click="multiSeries.addVariables(keys)">\n'+'                    <span class="glyphicon glyphicon-plus"></span>\n'+"                    Add all\n"+"                 </button>\n"+"\n"+'                 <button type="button" class="btn btn-default" ng-click="multiSeries.selectedVariables = {}">\n'+'                    <span class="glyphicon glyphicon-remove"></span>\n'+"                    Remove all\n"+"                 </button>\n"+"            </div>\n"+"\n"+'            <table st-table="multiSeries.displayedKeys" st-safe-src="keys" class="table table-striped">\n'+"                <thead>\n"+"                    <tr>\n"+'                        <th colspan="2">\n'+'                            <input st-search="label" placeholder="search by variable name" class="input-sm form-control" type="search"/>\n'+"                        </th>\n"+"                    </tr>\n"+"                </thead>\n"+"                <tbody>\n"+'                    <tr ng-repeat="row in multiSeries.displayedKeys">\n'+"                        <td>\n"+'                            <div class="input-group">\n'+'                                <input type="checkbox" ng-model="multiSeries.selectedVariables[row.label]">\n'+"                            </div>\n"+"                        </td>\n"+"                        <td>{{row.label}}</td>\n"+"                    </tr>\n"+"                </tbody>\n"+"            </table>\n"+"        </div>\n"+"\n"+'        <div class="col-md-6">\n'+"            \n"+'            <div class="btn-group">\n'+'                 <button type="button" class="btn btn-default" ng-click="multiSeries.addSubjects(multiSeries.displayedSubjects)">\n'+'                    <span class="glyphicon glyphicon-plus"></span>\n'+"                    Add\n"+"                 </button>\n"+"\n"+'                 <button type="button" class="btn btn-default" ng-click="multiSeries.addSubjects(data)">\n'+'                    <span class="glyphicon glyphicon-plus"></span>\n'+"                    Add all\n"+"                 </button>\n"+"\n"+'                 <button type="button" class="btn btn-default" ng-click="multiSeries.subjects = {}">\n'+'                    <span class="glyphicon glyphicon-remove"></span>\n'+"                    Remove all\n"+"                 </button>\n"+"            </div>\n"+"\n"+'            <table st-table="multiSeries.displayedSubjects" st-safe-src="data" class="table table-striped">\n'+"                <thead>\n"+"                    <tr>\n"+'                        <th colspan="2">\n'+'                            <input st-search="patientId" placeholder="search by patientId " class="input-sm form-control" type="search"/>\n'+"                        </th>\n"+"                    </tr>\n"+"                </thead>\n"+"                <tbody>\n"+'                    <tr ng-repeat="row in multiSeries.displayedSubjects">\n'+"                        <td>\n"+'                            <div class="input-group">\n'+'                                <input type="checkbox" ng-model="multiSeries.subjects[row._id]">\n'+"                            </div>\n"+"                        </td>\n"+"                        <td>{{row.patientId}}</td>\n"+"                    </tr>\n"+"                </tbody>\n"+"            </table>\n"+"\n"+"            \n"+"        </div>\n"+"\n"+"        \n"+"    </div>\n"+"\n"+'    <div class="col-md-12">\n'+'        <div class="btn-group">\n'+'             <button type="button" class="btn btn-default" ng-click="multiSeries.update()">\n'+'                <span class="glyphicon glyphicon-refresh"></span>\n'+"                Update\n"+"             </button>\n"+"        </div>\n"+"        \n"+"        <multi-series-line-chart\n"+'            data="multiSeries.data"\n'+'            height="height"\n'+'            margin="margin"\n'+"        ></multi-series-line-chart>\n"+"\n"+'        <select class="form-control" ng-options="item as item.label for item in attachments.data" ng-model="attachments.selected"></select>\n'+'        <directive-threejs data="attachments.surface" height="height" ng-if="attachments.surface"></directive-threejs>\n'+"    </div>\n"+"</div>\n")}]);
//# sourceMappingURL=dcbia-plots.min.js.map